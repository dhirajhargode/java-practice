<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>This week in JBoss (29th November 2018): Wait, what,... SpringBoot???</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/WN43prpcLjM/this-week-in-jboss-29th-november-2018-wait-what-springboot" /><category term="audit" scheme="searchisko:content:tags" /><category term="byteman" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="Hibernate" scheme="searchisko:content:tags" /><category term="hibernate-orm" scheme="searchisko:content:tags" /><category term="infinispan" scheme="searchisko:content:tags" /><category term="jakarta" scheme="searchisko:content:tags" /><category term="JavaEE" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="red_hat_summit" scheme="searchisko:content:tags" /><category term="Spring" scheme="searchisko:content:tags" /><category term="springboot" scheme="searchisko:content:tags" /><author><name>Romain Pelisse</name></author><id>searchisko:content:id:jbossorg_blog-this_week_in_jboss_29th_november_2018_wait_what_springboot</id><updated>2018-11-29T18:09:47Z</updated><published>2018-11-29T18:09:47Z</published><content type="html">&lt;!-- [DocumentBodyStart:6d8e96a4-e090-446f-9d00-9ebbf722a4e9] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;The last editorial was focused on the "breaking news" of the day. Even if the dust has far from settled on this, it's time for us to get back to business as usual! Well, not really as usual, because we have a rather awesome announcement about .... SpringBoot!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;SpringBoot&lt;/h2&gt;&lt;h2&gt;&lt;/h2&gt;&lt;p&gt;While technically more of a Red Hat news than a JBoss community one, it seems to very much deserved to be mentioned here: &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/11/26/announcing-full-spring-boot-support-for-red-hat-openshift-application-runtimes/" rel="nofollow"&gt;Announcing: Full Spring Boot support for Red Hat OpenShift Application Runtimes !!!&lt;/a&gt; I won't comment more but I will urge to take a look at the post!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Infinispan - on road to version 10!&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The Infinispan project is getting close to release its next&amp;#160; major version and they have laid for us the road ahead: &lt;a class="jive-link-external-small" href="https://blog.infinispan.org/2018/11/the-road-to-infinispan-10-alpha1.html" rel="nofollow"&gt;The road to Infinispan 10 (Alpha1)&lt;/a&gt;! This post is nice sum up of the coming new features and changes in the project. I highly recommend you take a look at it. And if you have not yet played with or experimented with Infinispan, maybe this &lt;a class="jive-link-external-small" href="https://blog.infinispan.org/2018/11/quick-start-infinispan-on-kubernetes.html&amp;#226;&amp;#128;&amp;#139;" rel="nofollow"&gt;Quick start Infinispan on Kubernetes&lt;/a&gt; would be a nice opportunity to do so. And if you have familiar with Infinispan, you certainly want to explore its usage on Kubernetes!&lt;/p&gt;&lt;p class="active_link" style="min-height: 8pt; padding: 0px;" title="https://blog.infinispan.org/2018/11/quick-start-infinispan-on-kubernetes.html"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Tech Bytes&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The headlines above are already plenty to digest. However, you might still be hungry for a tidbits of technical knowledge. We therefore selected a few things for you to nimble on:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://mswiderski.blogspot.com/2018/11/audit-log-mode-applied-to-all-audit-data.html" rel="nofollow"&gt;Accelerate your business: Audit log mode applied to all audit data&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://www.optaplanner.org/blog/2018/11/19/TruckDodgesStormsWhileKeepingSalesHappy.html" rel="nofollow"&gt;OptaPlanner - Red Hat Mobile Portfolio Truck dodges storms while keeping Sales happy with OptaPlanner&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/11/23/hibernate-community-newsletter-2018-23/" rel="nofollow"&gt;Hibernate Community Newsletter 23/2018 - In Relation To&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/11/16/free-online-java-ee-development-course-from-red-hat-available-now/" rel="nofollow"&gt;Free Online Java EE Development Course From Red Hat Available Now - RHD Blog&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2 class="active_link" title="https://blog.infinispan.org/2018/11/quick-start-infinispan-on-kubernetes.html"&gt;Evangelist's Corner&lt;/h2&gt;&lt;h2&gt;&lt;/h2&gt;&lt;p&gt;Not done yet? Worry not, our own Eric D. Schabell has also plenty for you to fest on!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2018/11/modern-business-logic-tooling-workshop-lab01.html" rel="nofollow"&gt;Modern Business Logic Tooling Workshop - Lab 01 Installing Decision Manager&lt;/a&gt; &lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2018/11/red-hat-summit-2019-submitting-pitfalls-storytelling-career-planning.html" rel="nofollow"&gt;Red Hat Summit 2019 - Submitting all new pitfalls, storytelling, and career planning sessions&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2018/11/appdev-in-cloud-how-to-put-red-hat-process-automation-manager-in-your-cloud.html" rel="nofollow"&gt;AppDev in Cloud: How to put Red Hat Process Automation Manager in your Cloud&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Releases, releases, releases...&lt;/h2&gt;&lt;h2&gt;&lt;/h2&gt;&lt;p&gt;While we are blogging, twitting and emailing, the developers of the JBoss Community are quietly working and more importantly.... Releasing!&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/11/28/hibernate-orm-5117-final-release/" rel="nofollow"&gt;Hibernate ORM 5.1.17.Final released - In Relation To&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://bytemanblog.blogspot.com/2018/11/byteman-405-has-been-released.html" rel="nofollow"&gt;Byteman Blog: Byteman 4.0.5 has been released&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;That's all for this week's edition of the Editorial, please join us next time as we continue our journey through the JBoss Communities in search of interesting articles and news.&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:6d8e96a4-e090-446f-9d00-9ebbf722a4e9] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/WN43prpcLjM" height="1" width="1" alt=""/&gt;</content><summary>The last editorial was focused on the "breaking news" of the day. Even if the dust has far from settled on this, it's time for us to get back to business as usual! Well, not really as usual, because we have a rather awesome announcement about .... SpringBoot! Â  SpringBoot While technically more of a Red Hat news than a JBoss community one, it seems to very much deserved to be mentioned here: Annou...</summary><dc:creator>Romain Pelisse</dc:creator><dc:date>2018-11-29T18:09:47Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2018/11/29/this-week-in-jboss-29th-november-2018-wait-what-springboot</feedburner:origLink></entry><entry><title>Managing containerized system services with Podman</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/-uAKazZ6mQo/" /><category term="container" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="docker" scheme="searchisko:content:tags" /><category term="fedora" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Podman" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="rhel" scheme="searchisko:content:tags" /><category term="service" scheme="searchisko:content:tags" /><category term="services" scheme="searchisko:content:tags" /><category term="systemctl" scheme="searchisko:content:tags" /><category term="systemd" scheme="searchisko:content:tags" /><author><name>Alessandro Arrichiello</name></author><id>searchisko:content:id:jbossorg_blog-managing_containerized_system_services_with_podman</id><updated>2018-11-29T12:00:16Z</updated><published>2018-11-29T12:00:16Z</published><content type="html">&lt;p&gt;In this article, I discuss &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;containers&lt;/a&gt;, but look at them from another angle.Â We usually refer to containers as the best technology for developing new cloud-native applications and orchestrating them with something like &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;. Looking back at the origins of containers, we&amp;#8217;ve mostly forgotten that containers were born for simplifying application distribution on standalone systems.&lt;/p&gt; &lt;p&gt;In this article, we&amp;#8217;ll talk about the use of containers as the perfect medium for installing applications and services on a &lt;a href="https://developers.redhat.com/products/rhel/"&gt;Red Hat Enterprise Linux&lt;/a&gt;Â (RHEL) system. Using containers doesn&amp;#8217;t have to be complicated, I&amp;#8217;llÂ show how to run MariaDB, Apache HTTPD, and WordPress in containers, while managing those containers like any other service, through systemd and &lt;code&gt;systemctl.&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Additionally, we&amp;#8217;ll explore Podman, which Red Hat has developed jointly with the Fedora community.Â If you don&amp;#8217;t know what Podman is yet, see my previous article,Â &lt;a href="https://developers.redhat.com/blog/2018/08/29/intro-to-podman/"&gt;Intro to Podman (Red Hat Enterprise Linux 7.6)&lt;/a&gt;Â and Tom Sweeney&amp;#8217;sÂ &lt;a href="https://developers.redhat.com/blog/2018/11/20/buildah-podman-containers-without-daemons/"&gt;Containers without daemons: Podman and Buildah available in RHEL 7.6 and RHEL 8 Beta&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;span id="more-515827"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Red Hat Container Catalog&lt;/h2&gt; &lt;p&gt;First of all, let&amp;#8217;s explore the containers that are available for Red Hat Enterprise Linux through the &lt;a href="https://access.redhat.com/containers/"&gt;Red Hat Container CatalogÂ &lt;/a&gt;&lt;a href="https://access.redhat.com/containers/"&gt;(access.redhat.com/containers)&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-542087 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-021-Container-Catalog-Red-Hat-Customer_-https___access.redhat.com_containers_-1-1024x613.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-021-Container-Catalog-Red-Hat-Customer_-https___access.redhat.com_containers_-1.png" alt="" width="1920" height="1150" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-021-Container-Catalog-Red-Hat-Customer_-https___access.redhat.com_containers_-1.png 1920w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-021-Container-Catalog-Red-Hat-Customer_-https___access.redhat.com_containers_-1-300x180.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-021-Container-Catalog-Red-Hat-Customer_-https___access.redhat.com_containers_-1-768x460.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-021-Container-Catalog-Red-Hat-Customer_-https___access.redhat.com_containers_-1-1024x613.png 1024w" sizes="(max-width: 1920px) 100vw, 1920px" /&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;By clicking &lt;strong&gt;Explore The Catalog&lt;/strong&gt;, we&amp;#8217;ll have access to the full list of containers categories and products available in Red Hat Container Catalog.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore.png"&gt;&lt;img class=" alignnone size-full wp-image-535017 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore-1024x178.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore-1024x178.png" alt="Exploring the available containers" width="640" height="111" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore-1024x178.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore-300x52.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore-768x133.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore.png 1382w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Clicking &lt;strong&gt;Red Hat Enterprise Linux&lt;/strong&gt;Â will bring us to the RHEL section, displaying all the available containers images for the system:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe.png"&gt;&lt;img class=" alignnone size-full wp-image-535027 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe-1024x905.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe-1024x905.png" alt="Available RHEL containers" width="640" height="566" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe-1024x905.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe-300x265.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe-768x678.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe.png 1372w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;At the time of writing this article, in the RHEL category there were more than 70 containers images, ready to be installed and used on RHEL 7 systems.&lt;/p&gt; &lt;p&gt;So let&amp;#8217;s choose some container images and try them on a Red Hat Enterprise Linux 7.6 system. For demo purposes, we&amp;#8217;ll try to use Apache HTTPD + PHP Â and the MariaDB database for a WordPress blog.&lt;/p&gt; &lt;h2&gt;Install a containerized service&lt;/h2&gt; &lt;p&gt;We&amp;#8217;ll start by installing our first containerized service for setting up a MariaDB database that we&amp;#8217;ll need for hosting the WordPress blog&amp;#8217;s data.&lt;/p&gt; &lt;p&gt;As a prerequisite for installing containerized system services, we need to install the utility named PodmanÂ on our Red Hat Enterprise Linux 7 system:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# subscription-manager repos --enable rhel-7-server-rpms --enable rhel-7-server-extras-rpms [root@localhost ~]# yum install podman&lt;/pre&gt; &lt;p&gt;As explained in my previous article,Â Podman complements Buildah and Skopeo by offering an experience similar to the Docker command line: allowing users to run standalone (non-orchestrated) containers. And Podman doesnât require a daemon to run containers and pods, so we can easily say goodbye to big fat daemons.&lt;/p&gt; &lt;p&gt;By installing Podman, you&amp;#8217;ll see that Docker is no longer a required dependency!&lt;/p&gt; &lt;p&gt;As suggested by the Red Hat Container Catalog&amp;#8217;s MariaDB page, we can run the following commands to get the things done (we&amp;#8217;ll replace, of course, &lt;code&gt;docker&lt;/code&gt; with &lt;code&gt;podman&lt;/code&gt;):&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# podman pull registry.access.redhat.com/rhscl/mariadb-102-rhel7 Trying to pull registry.access.redhat.com/rhscl/mariadb-102-rhel7...Getting image source signatures Copying blob sha256:9a1bea865f798d0e4f2359bd39ec69110369e3a1131aba6eb3cbf48707fdf92d 72.21 MB / 72.21 MB [======================================================] 9s Copying blob sha256:602125c154e3e132db63d8e6479c5c93a64cbfd3a5ced509de73891ff7102643 1.21 KB / 1.21 KB [========================================================] 0s Copying blob sha256:587a812f9444e67d0ca2750117dbff4c97dd83a07e6c8c0eb33b3b0b7487773f 6.47 MB / 6.47 MB [========================================================] 0s Copying blob sha256:5756ac03faa5b5fb0ba7cc917cdb2db739922710f885916d32b2964223ce8268 58.82 MB / 58.82 MB [======================================================] 7s Copying config sha256:346b261383972de6563d4140fb11e81c767e74ac529f4d734b7b35149a83a081 6.77 KB / 6.77 KB [========================================================] 0s Writing manifest to image destination Storing signatures 346b261383972de6563d4140fb11e81c767e74ac529f4d734b7b35149a83a081 [root@localhost ~]# podman images REPOSITORY TAG IMAGE ID CREATED SIZE registry.access.redhat.com/rhscl/mariadb-102-rhel7 latest 346b26138397 2 weeks ago 449MB&lt;/pre&gt; &lt;p&gt;After that, we can look at the &lt;a href="https://access.redhat.com/containers/?tab=tech-details&amp;#38;platform=systemimages#/registry.access.redhat.com/rhscl/mariadb-102-rhel7"&gt;Red Hat Container Catalog page&lt;/a&gt; for details on the needed variables for starting the MariaDB container image.&lt;/p&gt; &lt;p&gt;Inspecting the previous page, we can see that under &lt;em&gt;Labels&lt;/em&gt;, there is a label named &lt;em&gt;usage&lt;/em&gt; containing an example string for running this container image:&lt;/p&gt; &lt;pre&gt;usage docker run -d -e MYSQL_USER=user -e MYSQL_PASSWORD=pass -e MYSQL_DATABASE=db -p 3306:3306 rhscl/mariadb-102-rhel7&lt;/pre&gt; &lt;p&gt;After that we need some other information about our container image: the &amp;#8220;&lt;em&gt;user ID running inside the container&lt;/em&gt;&amp;#8221; and the &amp;#8220;&lt;em&gt;persistent volume location to attach&lt;/em&gt;&amp;#8220;:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# podman inspect registry.access.redhat.com/rhscl/mariadb-102-rhel7 | grep User "User": "&lt;strong&gt;27&lt;/strong&gt;", [root@localhost ~]# podman inspect registry.access.redhat.com/rhscl/mariadb-102-rhel7 | grep -A1 Volume "Volumes": { "&lt;i&gt;/var/lib/mysql/data&lt;/i&gt;": {} [root@localhost ~]# podman inspect registry.access.redhat.com/rhscl/mariadb-102-rhel7 | grep -A1 ExposedPorts "ExposedPorts": { "&lt;i&gt;3306&lt;/i&gt;/tcp": {}&lt;/pre&gt; &lt;p&gt;At this point, we have to create the directories that will handle the container&amp;#8217;s data; remember that containers are ephemeral by default. Then we set also the right permissions:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# mkdir -p /opt/var/lib/mysql/data [root@localhost ~]# chown 27:27 /opt/var/lib/mysql/data&lt;/pre&gt; &lt;p&gt;Then we can set up our &lt;code&gt;systemd&lt;/code&gt; unit file for handling the database. We&amp;#8217;ll use a unit file similar to the one prepared in the previous article:&lt;/p&gt; &lt;pre class="notranslate"&gt;[root@localhost ~]# cat /etc/systemd/system/mariadb-service.service [Unit] Description=Custom MariaDB Podman Container After=network.target [Service] Type=simple TimeoutStartSec=5m ExecStartPre=-/usr/bin/podman rm "mariadb-service" ExecStart=/usr/bin/podman run --name mariadb-service -v /opt/var/lib/mysql/data:/var/lib/mysql/data:Z -e MYSQL_USER=wordpress -e MYSQL_PASSWORD=mysecret -e MYSQL_DATABASE=wordpress --net host registry.access.redhat.com/rhscl/mariadb-102-rhel7 ExecReload=-/usr/bin/podman stop "mariadb-service" ExecReload=-/usr/bin/podman rm "mariadb-service" ExecStop=-/usr/bin/podman stop "mariadb-service" Restart=always RestartSec=30 [Install] WantedBy=multi-user.target&lt;/pre&gt; &lt;p&gt;Let&amp;#8217;s take apart our &lt;code&gt;ExecStart&lt;/code&gt;Â command and analyze how it&amp;#8217;s built:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;/usr/bin/podman run --name mariadb-service&lt;/code&gt;Â says we want to run a container that will be named &lt;code&gt;mariadb-service&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;em&gt;&amp;#8211;&lt;/em&gt;&lt;code&gt;v /opt/var/lib/mysql/data:/var/lib/mysql/data:Z&lt;/code&gt;Â  says we want to map the just-created data directory to the one inside the container. The &lt;code&gt;Z&lt;/code&gt; option informs Podman to map correctly the SELinux context for avoiding permissions issues.&lt;/li&gt; &lt;li&gt;&lt;em&gt;&amp;#8211;&lt;/em&gt;&lt;code&gt;e MYSQL_USER=wordpress -e MYSQL_PASSWORD=mysecret -e MYSQL_DATABASE=wordpress&lt;/code&gt;Â identifies the additional environment variables to use with our MariaDB container. We&amp;#8217;re defining the username, the password, and the database name to use.&lt;/li&gt; &lt;li&gt;&lt;code&gt;--net host&lt;/code&gt; maps the container&amp;#8217;s network to the RHEL host.&lt;/li&gt; &lt;li&gt;&lt;code&gt;registry.access.redhat.com/rhscl/mariadb-102-rhel7&lt;/code&gt;Â specifies the container image to use.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;We can now reload the &lt;code&gt;systemd&lt;/code&gt; catalog and start the service:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# systemctl daemon-reload [root@localhost ~]# systemctl start mariadb-service [root@localhost ~]# systemctl status mariadb-service mariadb-service.service - Custom MariaDB Podman Container Loaded: loaded (/etc/systemd/system/mariadb-service.service; static; vendor preset: disabled) Active: active (running) since Thu 2018-11-08 10:47:07 EST; 22s ago Process: 16436 ExecStartPre=/usr/bin/podman rm mariadb-service â(code=exited, status=0/SUCCESS) Main PID: 16452 (podman) CGroup: /system.slice/mariadb-service.service ââ16452 /usr/bin/podman run --name mariadb-service -v /opt/var/lib/mysql/data:/var/lib/mysql/data:Z -e MYSQL_USER=wordpress -e MYSQL_PASSWORD=mysecret -e MYSQL_DATABASE=wordpress --net host regist... Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140276291061504 [Note] InnoDB: Buffer pool(s) load completed at 181108 15:47:14 Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Note] Plugin 'FEEDBACK' is disabled. Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Note] Server socket created on IP: '::'. Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Warning] 'user' entry 'root@b75779533f08' ignored in --skip-name-resolve mode. Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Warning] 'user' entry '@b75779533f08' ignored in --skip-name-resolve mode. Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Warning] 'proxies_priv' entry '@% root@b75779533f08' ignored in --skip-name-resolve mode. Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Note] Reading of all Master_info entries succeded Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Note] Added new Master_info '' to hash table Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Note] /opt/rh/rh-mariadb102/root/usr/libexec/mysqld: ready for connections. Nov 08 10:47:14 localhost.localdomain podman[16452]: Version: '10.2.8-MariaDB' socket: '/var/lib/mysql/mysql.sock' port: 3306 MariaDB Server&lt;/pre&gt; &lt;p&gt;Perfect! MariaDB is running, so we can now start working on the Apache HTTPDÂ + PHP container for our WordPress service.&lt;/p&gt; &lt;p&gt;First of all, let&amp;#8217;s pull the right container from Red Hat Container Catalog:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# podman pull registry.access.redhat.com/rhscl/php-71-rhel7 Trying to pull registry.access.redhat.com/rhscl/php-71-rhel7...Getting image source signatures Skipping fetch of repeat blob sha256:9a1bea865f798d0e4f2359bd39ec69110369e3a1131aba6eb3cbf48707fdf92d Skipping fetch of repeat blob sha256:602125c154e3e132db63d8e6479c5c93a64cbfd3a5ced509de73891ff7102643 Skipping fetch of repeat blob sha256:587a812f9444e67d0ca2750117dbff4c97dd83a07e6c8c0eb33b3b0b7487773f Copying blob sha256:12829a4d5978f41e39c006c78f2ecfcd91011f55d7d8c9db223f9459db817e48 82.37 MB / 82.37 MB [=====================================================] 36s Copying blob sha256:14726f0abe4534facebbfd6e3008e1405238e096b6f5ffd97b25f7574f472b0a 43.48 MB / 43.48 MB [======================================================] 5s Copying config sha256:b3deb14c8f29008f6266a2754d04cea5892ccbe5ff77bdca07f285cd24e6e91b 9.11 KB / 9.11 KB [========================================================] 0s Writing manifest to image destination Storing signatures b3deb14c8f29008f6266a2754d04cea5892ccbe5ff77bdca07f285cd24e6e91b&lt;/pre&gt; &lt;p&gt;We can now look through this container image to get some details:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# podman inspect registry.access.redhat.com/rhscl/php-71-rhel7 | grep User "User": "1001", "User": "1001" [root@localhost ~]# podman inspect registry.access.redhat.com/rhscl/php-71-rhel7 | grep -A1 Volume [root@localhost ~]# podman inspect registry.access.redhat.com/rhscl/php-71-rhel7 | grep -A1 ExposedPorts "ExposedPorts": { "8080/tcp": {},&lt;/pre&gt; &lt;p&gt;As you can see from the previous commands, we got no volume from the container details. Are you asking why? It&amp;#8217;s because this container image, even if it&amp;#8217;s part of RHSCL (formerly known as Red Hat Software Collections), has been prepared for working with the Source-to-Image (S2I) builder. For more info on the S2I builder, please take a look at its &lt;a href="https://github.com/openshift/source-to-image"&gt;GitHub project page&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Unfortunately, at this moment, the S2I utility is strictly dependent on Docker, but for demo purposes, we would like to avoid it..!&lt;/p&gt; &lt;p&gt;So moving back to our issue, what can we do for guessing the right folder to mount on our PHP container? We can easily guess the right location by looking at all the environment variables for the container image, where we will find &lt;code&gt;APP_DATA=/opt/app-root/src&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;So let&amp;#8217;s create this directory with the right permissions; we&amp;#8217;ll also download the latest package for our WordPress service:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# mkdir -p /opt/app-root/src/ [root@localhost ~]# curl -o latest.tar.gz https://wordpress.org/latest.tar.gz [root@localhost ~]# tar -vxf latest.tar.gz [root@localhost ~]# mv wordpress/* /opt/app-root/src/ [root@localhost ~]# chown 1001 -R /opt/app-root/src&lt;/pre&gt; &lt;p&gt;We&amp;#8217;re now ready for creating our Apache &lt;code&gt;http&lt;/code&gt; + PHP &lt;code&gt;systemd&lt;/code&gt; unit file:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# cat /etc/systemd/system/httpdphp-service.service [Unit] Description=Custom httpd + php Podman Container After=mariadb-service.service [Service] Type=simple TimeoutStartSec=30s ExecStartPre=-/usr/bin/podman rm "httpdphp-service" ExecStart=/usr/bin/podman run --name httpdphp-service -p 8080:8080 -v /opt/app-root/src:/opt/app-root/src:Z registry.access.redhat.com/rhscl/php-71-rhel7 /bin/sh -c /usr/libexec/s2i/run ExecReload=-/usr/bin/podman stop "httpdphp-service" ExecReload=-/usr/bin/podman rm "httpdphp-service" ExecStop=-/usr/bin/podman stop "httpdphp-service" Restart=always RestartSec=30 [Install] WantedBy=multi-user.target&lt;/pre&gt; &lt;p&gt;We need then to reload the &lt;code&gt;systemd&lt;/code&gt; unit files and start our latest service:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# systemctl daemon-reload [root@localhost ~]# systemctl start httpdphp-service [root@localhost ~]# systemctl status httpdphp-service httpdphp-service.service - Custom httpd + php Podman Container Loaded: loaded (/etc/systemd/system/httpdphp-service.service; static; vendor preset: disabled) Active: active (running) since Thu 2018-11-08 12:14:19 EST; 4s ago Process: 18897 ExecStartPre=/usr/bin/podman rm httpdphp-service (code=exited, status=125) Main PID: 18913 (podman) CGroup: /system.slice/httpdphp-service.service ââ18913 /usr/bin/podman run --name httpdphp-service -p 8080:8080 -v /opt/app-root/src:/opt/app-root/src:Z registry.access.redhat.com/rhscl/php-71-rhel7 /bin/sh -c /usr/libexec/s2i/run Nov 08 12:14:20 localhost.localdomain podman[18913]: =&amp;#62; sourcing 50-mpm-tuning.conf ... Nov 08 12:14:20 localhost.localdomain podman[18913]: =&amp;#62; sourcing 40-ssl-certs.sh ... Nov 08 12:14:20 localhost.localdomain podman[18913]: AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 10.88.0.12. Set the 'ServerName' directive globall... this message Nov 08 12:14:20 localhost.localdomain podman[18913]: [Thu Nov 08 17:14:20.925637 2018] [ssl:warn] [pid 1] AH01909: 10.88.0.12:8443:0 server certificate does NOT include an ID which matches the server name Nov 08 12:14:20 localhost.localdomain podman[18913]: AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 10.88.0.12. Set the 'ServerName' directive globall... this message Nov 08 12:14:21 localhost.localdomain podman[18913]: [Thu Nov 08 17:14:21.017164 2018] [ssl:warn] [pid 1] AH01909: 10.88.0.12:8443:0 server certificate does NOT include an ID which matches the server name Nov 08 12:14:21 localhost.localdomain podman[18913]: [Thu Nov 08 17:14:21.017380 2018] [http2:warn] [pid 1] AH10034: The mpm module (prefork.c) is not supported by mod_http2. The mpm determines how things are ... Nov 08 12:14:21 localhost.localdomain podman[18913]: [Thu Nov 08 17:14:21.018506 2018] [lbmethod_heartbeat:notice] [pid 1] AH02282: No slotmem from mod_heartmonitor Nov 08 12:14:21 localhost.localdomain podman[18913]: [Thu Nov 08 17:14:21.101823 2018] [mpm_prefork:notice] [pid 1] AH00163: Apache/2.4.27 (Red Hat) OpenSSL/1.0.1e-fips configured -- resuming normal operations Nov 08 12:14:21 localhost.localdomain podman[18913]: [Thu Nov 08 17:14:21.101849 2018] [core:notice] [pid 1] AH00094: Command line: 'httpd -D FOREGROUND' Hint: Some lines were ellipsized, use -l to show in full.&lt;/pre&gt; &lt;p&gt;Let&amp;#8217;s open the 8080 port on our system&amp;#8217;s firewall for connecting to our brand new WordPress service:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# firewall-cmd --permanent --add-port=8080/tcp [root@localhost ~]# firewall-cmd --add-port=8080/tcp&lt;/pre&gt; &lt;p&gt;We can surf to our Apache web server:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06.png"&gt;&lt;img class=" alignnone size-full wp-image-535947 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06-1024x552.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06.png" alt="Apache web server" width="688" height="371" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06.png 1677w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06-300x162.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06-768x414.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06-1024x552.png 1024w" sizes="(max-width: 688px) 100vw, 688px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Start the installation process, and define all the needed details:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46.png"&gt;&lt;img class=" alignnone size-full wp-image-535957 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46-1024x578.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46.png" alt="Start the installation process" width="700" height="395" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46.png 1567w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46-300x169.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46-768x433.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46-1024x578.png 1024w" sizes="(max-width: 700px) 100vw, 700px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;And finally, run the installation!&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07.png"&gt;&lt;img class=" alignnone size-full wp-image-535977 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07-1024x408.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07.png" alt="Run the installation" width="701" height="280" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07.png 1026w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07-300x120.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07-768x306.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07-1024x408.png 1024w" sizes="(max-width: 701px) 100vw, 701px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;At the end, we should reach out our brand new blog, running on Apache &lt;code&gt;httpd&lt;/code&gt; + PHP backed by a great MariaDB database!&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-535967 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-08-39-1024x806.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-08-39.png" alt="" width="701" height="552" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-08-39.png 1617w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-08-39-300x236.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-08-39-768x605.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-08-39-1024x806.png 1024w" sizes="(max-width: 701px) 100vw, 701px" /&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;That&amp;#8217;s all folks; may containers be with you!&lt;/p&gt; &lt;h2 class="section-subheading-title"&gt;&lt;/h2&gt; &lt;h2&gt;About Alessandro&lt;/h2&gt; &lt;p&gt;&lt;img class="bio-img-display" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/profile_picture-300x300.jpg" alt="Alessandro Arrichiello" align="left" /&gt;&lt;/p&gt; &lt;p class="author-info selectionShareable"&gt;Alessandro Arrichiello is a Solution Architect for Red Hat Inc. He has a passion for GNU/Linux systems, which began at age 14 and continues today. He worked with tools for automating Enterprise IT: configuration management and continuous integration through virtual platforms. Heâs now working on distributed cloud environment involving PaaS (OpenShift), IaaS (OpenStack) and Processes Management (CloudForms), Containers building, instances creation, HA services management, workflows build.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#038;title=Managing%20containerized%20system%20services%20with%20Podman" data-a2a-url="https://developers.redhat.com/blog/2018/11/29/managing-containerized-system-services-with-podman/" data-a2a-title="Managing containerized system services with Podman"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/29/managing-containerized-system-services-with-podman/"&gt;Managing containerized system services with Podman&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/-uAKazZ6mQo" height="1" width="1" alt=""/&gt;</content><summary>In this article, I discuss containers, but look at them from another angle.Â We usually refer to containers as the best technology for developing new cloud-native applications and orchestrating them with something like Kubernetes. Looking back at the origins of containers, weâve mostly forgotten that containers were born for simplifying application distribution on standalone systems. In this articl...</summary><dc:creator>Alessandro Arrichiello</dc:creator><dc:date>2018-11-29T12:00:16Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/29/managing-containerized-system-services-with-podman/</feedburner:origLink></entry><entry><title>Integration Key to Customer Experience - External Application Details</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/EKnTR2BZCkk/integration-key-to-customer-experience-external-application-details.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Architecture Blueprints" scheme="searchisko:content:tags" /><category term="best practices" scheme="searchisko:content:tags" /><category term="BPM Suite" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-integration_key_to_customer_experience_external_application_details</id><updated>2018-11-29T14:17:37Z</updated><published>2018-11-29T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: left; margin-right: 1em; text-align: left;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-X6mCgHXoDIQ/W__mBJlS5lI/AAAAAAAAtV4/FCz9r9mwThcWe8rlsgl4CJ1OMsg0S4hUgCLcBGAs/s1600/Screenshot%2B2018-11-29%2Bat%2B14.11.16.png" imageanchor="1" style="clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="omnichannel customer experience" border="0" data-original-height="343" data-original-width="1600" height="68" src="https://2.bp.blogspot.com/-X6mCgHXoDIQ/W__mBJlS5lI/AAAAAAAAtV4/FCz9r9mwThcWe8rlsgl4CJ1OMsg0S4hUgCLcBGAs/s320/Screenshot%2B2018-11-29%2Bat%2B14.11.16.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Part 3 - External Application Details&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div style="text-align: left;"&gt;&lt;/div&gt;In &lt;a href="http://www.schabell.org/2018/11/integration-key-to-customer-experience-architectural-elements.html" target="_blank"&gt;my previous article from this series&lt;/a&gt; we took a high level view at the common architectural elements that determine how your integration becomes the key to transforming your customer experience.&lt;br /&gt;&lt;br /&gt;The process was laid out how I've approached the use case and how I've used successful customer portfolio solutions as the basis for researching a generic architectural blueprint. The only thing left to cover was the order in which you'll be led through the blueprint details.&lt;br /&gt;&lt;br /&gt;This article takes you deeper to cover details pertaining to the&amp;nbsp;specific elements (&lt;i&gt;mobile and web application deployments)&lt;/i&gt;&amp;nbsp;from the generic architectural overview.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Architectural details&lt;/h3&gt;&lt;div&gt;&lt;a href="https://2.bp.blogspot.com/-h6FO-sdoH4A/W-AjgSgf-aI/AAAAAAAAtPw/JFoyKy0JPbU9hj0jggWQqESQc6Ywr0GaQCPcBGAYYCw/s1600/omnichannel-header.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="omnichannel customer experience" border="0" data-original-height="454" data-original-width="895" height="162" src="https://2.bp.blogspot.com/-h6FO-sdoH4A/W-AjgSgf-aI/AAAAAAAAtPw/JFoyKy0JPbU9hj0jggWQqESQc6Ywr0GaQCPcBGAYYCw/s320/omnichannel-header.png" title="" width="320" /&gt;&lt;/a&gt;As mentioned before, the architectural details covered here are base on real customer integration solutions using open source technologies. The elements presented here are then the &lt;i&gt;generic common architectural elements&lt;/i&gt;&amp;nbsp;that I've identified and collected in to the generic architectural blueprint. It's my intent to provide a blueprint that provides guidance and not deep technical details.&lt;br /&gt;&lt;br /&gt;This section covers the visual representations as presented, but it's expected that they'll be evolving visually over time. There are many ways to represent each element in this architectural blueprint, but I've chosen icons, text and colours that I hope are going to make it all easy to absorb. Feel free to post comments at the bottom of this post, or &lt;a href="https://www.schabell.org/p/contact.html" target="_blank"&gt;contact me directly&lt;/a&gt; with your feedback.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Now let's take a look at the details in this architecture and outline the elements uncovered in my research.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Mobile applications&lt;/h3&gt;&lt;div&gt;When looking at external application deployments, it's split between mobile and web applications. Both are generic broad terms used to describe the types of application deployments discovered in the researched customers.&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-P7DOXnYngLw/W__FhaaE5lI/AAAAAAAAtVc/wxvEl9xYi6Abzf_iWjgfzdDCX5a5WwCsQCLcBGAs/s1600/Screenshot%2B2018-11-29%2Bat%2B11.27.31.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="omnichannel customer experience" border="0" data-original-height="650" data-original-width="892" height="233" src="https://2.bp.blogspot.com/-P7DOXnYngLw/W__FhaaE5lI/AAAAAAAAtVc/wxvEl9xYi6Abzf_iWjgfzdDCX5a5WwCsQCLcBGAs/s320/Screenshot%2B2018-11-29%2Bat%2B11.27.31.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;i&gt;Mobile applications&lt;/i&gt;&amp;nbsp;are anything not specific to the web, such as an application for the mobile phone, tablets or some sort of portable device not specifically defined. It's what the customers are using to&amp;nbsp;interact directly with a company. This can be mobile applications deployed by the company themselves or developed by third party organizations to interact with the services offered.&lt;br /&gt;&lt;br /&gt;These applications can be created using many different languages, libraries and target diverse platforms. Research showed that integration through the use of a&amp;nbsp; &lt;a href="https://developers.redhat.com/products/mobileplatform/overview/" target="_blank"&gt;mobile application platform&lt;/a&gt; was favoured above DIY mobile development to provide a platform for managing and maintaining mobile application development, integration and deployment.&lt;br /&gt;&lt;br /&gt;These applications link customers to a companies solutions and can encompass voice, video, and/or chat features. They access the organizational through the API gateway using single sign on for security. Interactions go through the following microservices:&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;frontend microservices (providing access to internal integration microservices)&lt;/li&gt;&lt;li&gt;process facade microservices (providing access to automated integration processes)&lt;/li&gt;&lt;li&gt;other applications (providing access to aggregated microservices or other internal applications)&lt;/li&gt;&lt;/ul&gt;When external application are not deployed on mobile devices, then we're looking at &lt;i&gt;web applications.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Web applications&lt;/h3&gt;&lt;i&gt;Web applications&lt;/i&gt;&amp;nbsp;are the category for all&amp;nbsp;other types of applications, web sites and/or services that are deployed by the company or any third party organizations to interact with the services offered.&lt;br /&gt;&lt;br /&gt;&lt;a href="https://1.bp.blogspot.com/-XSJNeZjNy2Y/W__kTuFF3nI/AAAAAAAAtVs/24QHJx3-GYkAlRDa0t9pbliHdKJZwLySACLcBGAs/s1600/Screenshot%2B2018-11-29%2Bat%2B13.53.53.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="omnichannel customer experience" border="0" data-original-height="616" data-original-width="878" height="224" src="https://1.bp.blogspot.com/-XSJNeZjNy2Y/W__kTuFF3nI/AAAAAAAAtVs/24QHJx3-GYkAlRDa0t9pbliHdKJZwLySACLcBGAs/s320/Screenshot%2B2018-11-29%2Bat%2B13.53.53.png" title="" width="320" /&gt;&lt;/a&gt;While in the traditional sense it can be anything hosted outside the company, we've encountered an internal (to the researched organization) helpdesk application that contained an interactive voice response (IVR) system integrated with email and text options. The solution treated this helpdesk application as an external web application for integration purposes and constructed the necessary microservices to interact with its API layer.&lt;br /&gt;&lt;br /&gt;These applications link customers to a companies solutions or provide external third party information to a companies information architecture to enrich their customers' experiences. They access the organizational through the API gateway using single sign on for security. Interactions go through the following microservices:&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;frontend microservices (providing access to internal integration microservices)&lt;/li&gt;&lt;li&gt;process facade microservices (providing access to automated integration processes)&lt;/li&gt;&lt;li&gt;other applications (providing access to aggregated microservices or other internal applications)&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;These details are not all knowing, but should give you the guidance you'd need to get started in your own architectural situations.&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;What's next&lt;/h3&gt;&lt;div&gt;This overview covers the external applications deployment elements that make up our architecture blueprint for ominchannel customer experience use case.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;An overview of the series on omnichannel customer experience portfolio architecture blueprint can be found here:&lt;br /&gt;&lt;ol style="text-align: left;"&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/11/integration-key-to-customer-experience-introduction.html" target="_blank"&gt;An introduction&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/11/integration-key-to-customer-experience-architectural-elements.html" target="_blank"&gt;Generic common architectural elements&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/11/integration-key-to-customer-experience-external-application-details.html" target="_blank"&gt;External application details&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Details of specific elements (api gateways, container platform, storage services)&lt;/li&gt;&lt;li&gt;Application integration details&lt;/li&gt;&lt;li&gt;Dissecting several specific application integration architectures&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;Catch up on any articles you missed by following one of the links above.&lt;br /&gt;&lt;br /&gt;Next in this series, taking a look at the details of&amp;nbsp;specific elements in an architecture for omnichannel customer experience.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6xuzPuWvCnk:hUzomTfdOmk:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6xuzPuWvCnk:hUzomTfdOmk:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6xuzPuWvCnk:hUzomTfdOmk:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=6xuzPuWvCnk:hUzomTfdOmk:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6xuzPuWvCnk:hUzomTfdOmk:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=6xuzPuWvCnk:hUzomTfdOmk:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6xuzPuWvCnk:hUzomTfdOmk:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=6xuzPuWvCnk:hUzomTfdOmk:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6xuzPuWvCnk:hUzomTfdOmk:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6xuzPuWvCnk:hUzomTfdOmk:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=6xuzPuWvCnk:hUzomTfdOmk:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/6xuzPuWvCnk" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/EKnTR2BZCkk" height="1" width="1" alt=""/&gt;</content><summary>Part 3 - External Application Details In my previous article from this series we took a high level view at the common architectural elements that determine how your integration becomes the key to transforming your customer experience. The process was laid out how I've approached the use case and how I've used successful customer portfolio solutions as the basis for researching a generic architectu...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-11-29T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/6xuzPuWvCnk/integration-key-to-customer-experience-external-application-details.html</feedburner:origLink></entry><entry><title>Hibernate ORM 5.4.0.CR2 released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/LivsXojFzjM/" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Guillaume Smet</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_orm_5_4_0_cr2_released</id><updated>2018-11-29T17:42:23Z</updated><published>2018-11-29T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We released the second candidate release of Hibernate ORM 5.4.0.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We have fixed a few issues and improved the documentation a bit.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Please consider testing this candidate release so the upgrade can be as smooth as possible.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-s-new"&gt;&lt;a class="anchor" href="#what-s-new"&gt;&lt;/a&gt;Whatâs new&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="sect2"&gt; &lt;h3 id="jaxb-upgrade"&gt;&lt;a class="anchor" href="#jaxb-upgrade"&gt;&lt;/a&gt;JAXB upgrade&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We eventually decided to upgrade JAXB to 2.3.1 because the JAXB 2.2 pom files are invalid and cause problems in certain situations.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Our OSGi tests (which were the reason we kept JAXB 2.2 for CR1) are still using 2.2, which is the version included in Karaf, but the rest of ORM uses 2.3.1.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="bug-fixes-and-minor-improvements"&gt;&lt;a class="anchor" href="#bug-fixes-and-minor-improvements"&gt;&lt;/a&gt;Bug fixes and minor improvements&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This release contains a few other bugfixes and minor improvements.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can find the full list of changes &lt;a href="https://hibernate.atlassian.net/projects/HHH/versions/31729/tab/release-report-all-issues"&gt;here&lt;/a&gt; (or, for people without a Hibernate Jira account, &lt;a href="https://hibernate.atlassian.net/secure/ReleaseNote.jspa?version=31729&amp;amp;styleName=Html&amp;amp;projectId=10031"&gt;here&lt;/a&gt;).&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="getting-5-4-0-cr2"&gt;&lt;a class="anchor" href="#getting-5-4-0-cr2"&gt;&lt;/a&gt;Getting 5.4.0.CR2&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;All details are available and up to date on &lt;a href="http://hibernate.org/orm/releases/5.4/#get-it"&gt;the dedicated page on hibernate.org&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-s-next"&gt;&lt;a class="anchor" href="#what-s-next"&gt;&lt;/a&gt;Whatâs next?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We will release 5.4.0.Final in the coming weeks and will release regular maintenance releases thereafter.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="feedback-issues-ideas"&gt;&lt;a class="anchor" href="#feedback-issues-ideas"&gt;&lt;/a&gt;Feedback, issues, ideas?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To get in touch, use the usual channels:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/tagged/hibernate"&gt;&lt;strong&gt;hibernate&lt;/strong&gt; tag on Stack Overflow&lt;/a&gt; (usage questions)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/c/hibernate-orm"&gt;User forum&lt;/a&gt; (usage questions, general feedback)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH"&gt;Issue tracker&lt;/a&gt; (bug reports, feature requests)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://lists.jboss.org/pipermail/hibernate-dev/"&gt;Mailing list&lt;/a&gt; (development-related discussions)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/LivsXojFzjM" height="1" width="1" alt=""/&gt;</content><summary>We released the second candidate release of Hibernate ORM 5.4.0. We have fixed a few issues and improved the documentation a bit. Please consider testing this candidate release so the upgrade can be as smooth as possible. Whatâs new JAXB upgrade We eventually decided to upgrade JAXB to 2.3.1 because the JAXB 2.2 pom files are invalid and cause problems in certain situations. Our OSGi tests (which ...</summary><dc:creator>Guillaume Smet</dc:creator><dc:date>2018-11-29T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/11/29/hibernate-orm-540-cr2-out/</feedburner:origLink></entry><entry><title>Announcing the Red Hat OpenShift extension for Visual Studio Code: Public Preview</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/-rjfT8pvOUY/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="community" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="OpenShift Connector" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Application Runtimes" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="Visual Studio Code" scheme="searchisko:content:tags" /><category term="VS Code" scheme="searchisko:content:tags" /><author><name>Mohit Suman</name></author><id>searchisko:content:id:jbossorg_blog-announcing_the_red_hat_openshift_extension_for_visual_studio_code_public_preview</id><updated>2018-11-28T14:00:02Z</updated><published>2018-11-28T14:00:02Z</published><content type="html">&lt;p&gt;We are extremely pleased to announce that the preview release of the &lt;a href="https://www.openshift.com/"&gt;Red Hat OpenShift&lt;/a&gt; extension for Visual Studio Code is now available. You can download the &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-openshift-connector"&gt;OpenShift Connector&lt;/a&gt; extension from the marketplace or install it directly from the extension gallery in Visual Studio Code.&lt;/p&gt; &lt;p&gt;This article provides describes the features and benefits of the extension and provides installation details. It also provides a demo of how using the extension improves the end-to-end experience of developing and deploying Spring Boot applications to local OpenShift cluster.&lt;/p&gt; &lt;h2&gt;&lt;span id="more-537657"&gt;&lt;/span&gt;&lt;/h2&gt; &lt;h2&gt;Benefits of using the extension&lt;/h2&gt; &lt;p&gt;&lt;a href="https://www.openshift.com/"&gt;Red Hat OpenShift&lt;/a&gt; is a container application platform that brings the power of &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;Â and &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;containers&lt;/a&gt; to the enterprise. Regardless of the applications architecture, OpenShift lets you easily and quickly build, develop, and deploy in nearly any infrastructure, public or private.&lt;/p&gt; &lt;p&gt;Therefore, whether itâs on-premises, in a public cloud, or hosted, you have an award-winning platform to get your next big idea to market ahead of your competition.&lt;/p&gt; &lt;p&gt;Using OpenShift Connector, you can interact with Red Hat OpenShift using a local instance of OpenShift clusters such as minishift/&lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;Red Hat Container Development Kit&lt;/a&gt;. Leveraging the OpenShift Application Explorer view, you can improve the end-to-end experience of developing applications.&lt;/p&gt; &lt;p&gt;The extension enables you to perform all this directly using Visual Studio Code and removes the complexity of memorizing some fairly complicated CLI commands.&lt;/p&gt; &lt;h2&gt;Developer use-case&lt;/h2&gt; &lt;p&gt;On a developer workstation, when you load a Spring Boot project, the language support detection automatically proposes to load a Spring Boot language support extension and suggests downloading and installing the OpenShift Connector. You can install the recommended extension in Visual Studio Code.&lt;/p&gt; &lt;p&gt;Therefore, once the OpenShift Connector is installed, OpenShift Application View is enabled on the Explorer panel in Visual Studio Code. Then, you can access the view and connect to a running OpenShift cluster and perform the required operations.&lt;/p&gt; &lt;h2&gt;Demo&lt;/h2&gt; &lt;p&gt;Here is a working &lt;a href="https://www.youtube.com/watch?v=XIHLbUvGuFM" target="_blank" rel="noopener"&gt;demoÂ &lt;/a&gt;of the end-to-end experience of developing and deploying Spring Boot applications to a local OpenShift cluster using the extension. This demo aims to simplify the OpenShift experience for Visual Studio developers. For detailed installation and usage information, please refer to the &lt;a href="https://github.com/redhat-developer/vscode-openshift-tools/blob/master/README.md"&gt;readme&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/XIHLbUvGuFM?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&lt;b&gt;Note&lt;/b&gt;:&lt;em&gt; In this Preview release, we support only Java and Node.JS components. We will be supporting other languages in future releases.&lt;/em&gt;&lt;/p&gt; &lt;h2 id="installation"&gt;Installation&lt;/h2&gt; &lt;p&gt;First, you will need to installÂ &lt;a title="https://code.visualstudio.com/download" href="https://code.visualstudio.com/download"&gt;Visual Studio Code&lt;/a&gt;Â 1.12.0Â or later.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;To install the extension with the latest version of Visual Studio Code, bring up the Visual Studio Code Command Palette (press F1).&lt;/li&gt; &lt;li&gt;TypeÂ &lt;code&gt;install&lt;/code&gt;Â and &lt;strong&gt;chooseÂ Extensions: Install Extensions&lt;/strong&gt;.&lt;/li&gt; &lt;li&gt;In the&lt;strong&gt;Â Search Extensions in Marketplace&lt;/strong&gt;Â text box, typeÂ &lt;code&gt;OpenShift&lt;/code&gt;. Find theÂ &lt;code&gt;OpenShift Connector&lt;/code&gt;Â extension published byÂ Red HatÂ and click the&lt;strong&gt;Â Install&lt;/strong&gt;Â button.&lt;/li&gt; &lt;li&gt;Subsequently, you should reload Visual Studio Code and there will be an OpenShift Icon in the Explorer View.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/openshift-extension-installation.gif"&gt;&lt;img class="attachment-266x266 aligncenter" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/openshift-extension-installation.gif" alt="OpenShift Connector installation demo" width="975" height="580" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Dependencies&lt;/h2&gt; &lt;p&gt;This extension uses two CLI tools to interact with an OpenShift cluster:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The OpenShift client tool:Â &lt;a href="https://github.com/openshift/origin/releases" target="_blank" rel="noopener"&gt;oc&lt;/a&gt;&lt;/li&gt; &lt;li&gt;The OpenShift Do tool:Â &lt;a href="https://github.com/redhat-developer/odo/releases" target="_blank" rel="noopener"&gt;odo&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If &lt;code&gt;oc&lt;/code&gt; and &lt;code&gt;odo&lt;/code&gt;Â are located in a directory contained in your PATH, they will be used automatically. If they aren&amp;#8217;t present in your PATH, the extension will prompt you to download and install them.&lt;/p&gt; &lt;h2&gt;The extension in action&lt;/h2&gt; &lt;h3&gt;Connecting to your OpenShift instance&lt;/h3&gt; &lt;ol&gt; &lt;li&gt;Start the local OpenShift instance using minishift/&lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;Red Hat Container Development Kit&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;After the extension is installed in Visual Studio Code, it will prompt you to download the required dependencies (&lt;code&gt;oc&lt;/code&gt;, &lt;code&gt;odo&lt;/code&gt;).&lt;/li&gt; &lt;li&gt;The OpenShift Application Explorer view is activated once you click the OpenShift icon in the Explorer View.&lt;/li&gt; &lt;li&gt;You then need to log in to the running OpenShift cluster (Â &lt;img class=" alignnone wp-image-540777 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/login-dark.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/login-dark.png" alt="" width="12" height="12" /&gt;Â &amp;#8211; Log in to Cluster).&lt;/li&gt; &lt;li&gt;Provide the cluster URL to connect to the running instance of OpenShift.&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM.png"&gt;&lt;img class=" alignnone wp-image-540787 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM-1024x415.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM.png" alt="logging in to OpenShift" width="845" height="343" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM.png 3225w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM-300x122.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM-768x311.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM-1024x415.png 1024w" sizes="(max-width: 845px) 100vw, 845px" /&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Now you can log in to the server using the following methods : &lt;ul&gt; &lt;li&gt;Credentials: Log in to the given server with the given credentials (basic auth).&lt;/li&gt; &lt;li&gt;Token: Log in to the given server with the given credentials (token).&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 60px;"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM.png"&gt;&lt;img class=" alignnone wp-image-540807 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM-1024x171.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM.png" alt="OpenShift login options" width="748" height="125" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM.png 1482w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM-300x50.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM-768x129.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM-1024x171.png 1024w" sizes="(max-width: 748px) 100vw, 748px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p style="padding-left: 30px;"&gt;7. OpenShift Application Explorer will display the OpenShift cluster in the Tree View.&lt;/p&gt; &lt;p style="padding-left: 30px;"&gt;8. Now you can perform the necessary operations in the connected cluster from the extension directly without looking back and forth to the command line.&lt;/p&gt; &lt;h3&gt;Working with OpenShift&lt;/h3&gt; &lt;p&gt;Once the extension is connected to the OpenShift clusters, you can perform operations in OpenShift and build/deploy applications.Â Note:Â Â &lt;em&gt;This extension currently supports a local OpenShift cluster running using &lt;a href="https://github.com/minishift/minishift/releases" target="_blank" rel="noopener"&gt;minishift&lt;/a&gt; or &lt;a href="https://developers.redhat.com/products/cdk/download/" target="_blank" rel="noopener"&gt;Red Hat Container Development Kit&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &lt;h4&gt;Actions available inside an OpenShift cluster&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;OpenShift: List catalog components&lt;/code&gt;Â â Lists all available component types from OpenShift&amp;#8217;s Image Builder.&lt;/li&gt; &lt;li&gt;&lt;code&gt;OpenShift: List catalog services&lt;/code&gt; â Lists all available services, for example, MySQL.&lt;/li&gt; &lt;li&gt;&lt;code&gt;OpenShift: New Project&lt;/code&gt; â Creates a new project inside the cluster.&lt;/li&gt; &lt;li&gt;&lt;code&gt;OpenShift: About&lt;/code&gt;Â â Provides information about the OpenShift tools.&lt;/li&gt; &lt;li&gt;&lt;code&gt;OpenShift: Log out&lt;/code&gt;Â â Logs out of the current OpenShift cluster.&lt;/li&gt; &lt;/ul&gt; &lt;h4&gt;Actions available for a project&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Project -&amp;#62; New Application&lt;/code&gt;Â â Creates a new application inside the selected project.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Project -&amp;#62; Delete&lt;/code&gt;Â â Deletes an existing project.&lt;/li&gt; &lt;/ul&gt; &lt;h4&gt;Actions available for an application inside a project&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Application -&amp;#62; New Component&lt;/code&gt;Â â Creates a new component inside the selected application. &lt;ul&gt; &lt;li&gt;git âÂ Use a git repository as the source file for the component.&lt;/li&gt; &lt;li&gt;local âÂ Use a local directory as a source file for the component.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;Application -&amp;#62; New Service&lt;/code&gt;Â â Performs service catalog operations.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Application -&amp;#62; Describe&lt;/code&gt;Â â Describes the given application in aÂ terminal window.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Application -&amp;#62; Delete&lt;/code&gt;Â â Deletes an existing application.&lt;/li&gt; &lt;/ul&gt; &lt;h4&gt;Actions available for a component in an application&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Create URL&lt;/code&gt;Â â Exposes a component to the outside world. The URLs that are generated using this command can be used to access the deployed components from outside the cluster.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Create Storage&lt;/code&gt;Â â Creates storage and mounts to a component.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Show Log&lt;/code&gt; â Retrieves the log for the given component.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Follow Log&lt;/code&gt;Â â Follows logs for the given component.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Open in Browser&lt;/code&gt;Â â Opens the exposed URL in a browser.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Push&lt;/code&gt;Â â Pushes source code to a component.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Watch&lt;/code&gt;Â â Watches for changes and updates component upon change.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Describe&lt;/code&gt; â Describes the given component in a terminal window.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Delete&lt;/code&gt;Â â Deletes an existing component.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Contributions and Feedback&lt;/h2&gt; &lt;p&gt;This is an open source project and we welcome contributions and suggestions. Follow theseÂ &lt;a href="https://github.com/redhat-developer/vscode-openshift-tools/blob/master/CONTRIBUTING.md"&gt;contributing&lt;/a&gt; guidelines for more details.&lt;/p&gt; &lt;p&gt;We are excited for you to give &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-openshift-connector"&gt;OpenShift Connector&lt;/a&gt; a try! In addition, any feedback to further improve the developer experience using OpenShift on Visual Studio Code is welcome.&lt;/p&gt; &lt;p&gt;Please reach out to us if you have any questions, encounter any issues, or have feature requests.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Have thoughts on how we can make the extension better? Simply &lt;a href="https://github.com/redhat-developer/vscode-openshift-tools/issues"&gt;open a new issue&lt;/a&gt;!&lt;/li&gt; &lt;li&gt;For more discussions, chat with us on &lt;a href="https://chat.openshift.io/developers/channels/adapters"&gt;Mattermost&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Happy Collaborating,&lt;br /&gt; Red Hat Developer Tools Team&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#038;title=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" data-a2a-url="https://developers.redhat.com/blog/2018/11/28/announcing-red-hat-openshift-extension-for-visual-studio-code-public-preview/" data-a2a-title="Announcing the Red Hat OpenShift extension for Visual Studio Code: Public Preview"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/28/announcing-red-hat-openshift-extension-for-visual-studio-code-public-preview/"&gt;Announcing the Red Hat OpenShift extension for Visual Studio Code: Public Preview&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/-rjfT8pvOUY" height="1" width="1" alt=""/&gt;</content><summary>We are extremely pleased to announce that the preview release of the Red Hat OpenShift extension for Visual Studio Code is now available. You can download the OpenShift Connector extension from the marketplace or install it directly from the extension gallery in Visual Studio Code. This article provides describes the features and benefits of the extension and provides installation details. It also...</summary><dc:creator>Mohit Suman</dc:creator><dc:date>2018-11-28T14:00:02Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/28/announcing-red-hat-openshift-extension-for-visual-studio-code-public-preview/</feedburner:origLink></entry><entry><title>How integration is key to customer experience (Part 1)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/BM2EQFXYLLQ/" /><category term="Agile Integration" scheme="searchisko:content:tags" /><category term="Architecture" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="Customer Experience" scheme="searchisko:content:tags" /><category term="devops" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="Red Hat Customers" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-how_integration_is_key_to_customer_experience_part_1</id><updated>2018-11-28T12:00:09Z</updated><published>2018-11-28T12:00:09Z</published><content type="html">&lt;p&gt;For the past few months, I&amp;#8217;ve been digging into my new role with a group of Portfolio Architects, looking specifically at integration as the key to omnichannel customer experience.&lt;/p&gt; &lt;p&gt;It&amp;#8217;s an interesting challenge in that we&amp;#8217;ve been given the mission of creating architectural content based on common customer adoption patterns. That&amp;#8217;s very different from most of the traditional marketing activities usually associated with generating content for the sole purpose of positioning products for solutions. When you&amp;#8217;re basing the content on actual execution in solution delivery, you&amp;#8217;re cutting out theÂ &lt;i&gt;chuff.Â &lt;/i&gt;&lt;/p&gt; &lt;p&gt;What&amp;#8217;s that mean?&lt;/p&gt; &lt;p&gt;It means that it&amp;#8217;s going to provide you with a way to implement a solution using open source technologies by focusing on the integrations, structures, and interactions that actually have been proven to work.&lt;/p&gt; &lt;p&gt;What&amp;#8217;s not included is any vendor promises that you&amp;#8217;ll find in normal marketing content: those promises that, when it gets down to implementation crunch time, might not fully deliver.&lt;/p&gt; &lt;p&gt;Enter the termÂ &lt;i&gt;architectural blueprint.Â &lt;/i&gt;&lt;/p&gt; &lt;p&gt;In this series of articles, let&amp;#8217;s look at these blueprints, how they are created, and what value they provide for your solution designs.&lt;/p&gt; &lt;p&gt;&lt;span id="more-536947"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;The process&lt;/h3&gt; &lt;p&gt;The first step is to decide the use case to start with, which in my case had to be linked to a higher-level theme that becomes the leading focus. This higher-level theme is not quite boiling the ocean, but it&amp;#8217;s so broad that it&amp;#8217;s going to require some division into smaller parts.&lt;/p&gt; &lt;p&gt;We&amp;#8217;ve settled on the higher-level theme beingÂ &lt;i&gt;&amp;#8216;migrating applications to &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;containers&lt;/a&gt;,&amp;#8217;&lt;/i&gt;Â which gives me the latitude to break it down as follows in no particular order:&lt;/p&gt; &lt;p&gt;&lt;a href="https://1.bp.blogspot.com/-OuoS8hlKSyM/W-AkHk6QCSI/AAAAAAAAtP0/-iGa-x9vfoYxffvXHDmguo3DkBULzFGwACLcBGAs/s1600/coworkers-looking-at-mobile-device_4460x4460.jpg"&gt;&lt;img class="alignright" src="https://1.bp.blogspot.com/-OuoS8hlKSyM/W-AkHk6QCSI/AAAAAAAAtP0/-iGa-x9vfoYxffvXHDmguo3DkBULzFGwACLcBGAs/s320/coworkers-looking-at-mobile-device_4460x4460.jpg" alt="omnichannel customer experience" width="320" height="213" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Omnichannel customer experience&lt;/li&gt; &lt;li&gt;Agile integration for cloud-native applications&lt;/li&gt; &lt;li&gt;APIs for customer and partner ecosystems&lt;/li&gt; &lt;li&gt;Multiple SaaS integration across hybrid environments&lt;/li&gt; &lt;li&gt;Application modernization&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The first case I&amp;#8217;m tackling isÂ &lt;i&gt;omnichannel customer experience&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;The approach taken is to research our existing customers who have implemented solutions in this space, collect their public-facing content, research the internal implementation documentation collections from their successful engagements, and where necessary reach out to the field resources involved.&lt;/p&gt; &lt;h3&gt;What&amp;#8217;s next&lt;/h3&gt; &lt;p&gt;The resulting content targets the following three items:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;A slide deck of the architectural blueprint for use that tells the portfolio solution story.&lt;/li&gt; &lt;li&gt;A generic architectural diagram providing the general details for the portfolio solution.&lt;/li&gt; &lt;li&gt;A write-up of the portfolio solution in a &amp;#8220;solution brief&amp;#8221; format.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;An overview of the series on the omnichannel customer experience portfolio architecture blueprint can be found here:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;An introduction (This article)&lt;/li&gt; &lt;li&gt;Common architectural elements for modern integration architectures&lt;/li&gt; &lt;li&gt;Details of specific elements (external apps, API gateways, container platform storage services)&lt;/li&gt; &lt;li&gt;Application integration details&lt;/li&gt; &lt;li&gt;Dissecting several specific application integration architectures&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Catch up on any articles you missed by following one of the links above.&lt;/p&gt; &lt;p&gt;Next in this series, I&amp;#8217;ll be taking a look at the generic common architecture for omnichannel customer experience.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fintegration-is-key-to-customer-experience%2F&amp;#38;linkname=How%20integration%20is%20key%20to%20customer%20experience%20%28Part%201%29" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fintegration-is-key-to-customer-experience%2F&amp;#38;linkname=How%20integration%20is%20key%20to%20customer%20experience%20%28Part%201%29" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fintegration-is-key-to-customer-experience%2F&amp;#38;linkname=How%20integration%20is%20key%20to%20customer%20experience%20%28Part%201%29" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fintegration-is-key-to-customer-experience%2F&amp;#38;linkname=How%20integration%20is%20key%20to%20customer%20experience%20%28Part%201%29" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fintegration-is-key-to-customer-experience%2F&amp;#38;linkname=How%20integration%20is%20key%20to%20customer%20experience%20%28Part%201%29" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fintegration-is-key-to-customer-experience%2F&amp;#38;linkname=How%20integration%20is%20key%20to%20customer%20experience%20%28Part%201%29" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fintegration-is-key-to-customer-experience%2F&amp;#38;linkname=How%20integration%20is%20key%20to%20customer%20experience%20%28Part%201%29" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fintegration-is-key-to-customer-experience%2F&amp;#38;linkname=How%20integration%20is%20key%20to%20customer%20experience%20%28Part%201%29" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fintegration-is-key-to-customer-experience%2F&amp;#038;title=How%20integration%20is%20key%20to%20customer%20experience%20%28Part%201%29" data-a2a-url="https://developers.redhat.com/blog/2018/11/28/integration-is-key-to-customer-experience/" data-a2a-title="How integration is key to customer experience (Part 1)"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/28/integration-is-key-to-customer-experience/"&gt;How integration is key to customer experience (Part 1)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/BM2EQFXYLLQ" height="1" width="1" alt=""/&gt;</content><summary>For the past few months, Iâve been digging into my new role with a group of Portfolio Architects, looking specifically at integration as the key to omnichannel customer experience. Itâs an interesting challenge in that weâve been given the mission of creating architectural content based on common customer adoption patterns. Thatâs very different from most of the traditional marketing activities us...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-11-28T12:00:09Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/28/integration-is-key-to-customer-experience/</feedburner:origLink></entry><entry><title>Hibernate ORM 5.1.17.Final released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/gitvMDB5V7o/" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Gail Badner</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_orm_5_1_17_final_released</id><updated>2018-11-29T17:42:23Z</updated><published>2018-11-28T00:00:00Z</published><content type="html">&lt;div class="paragraph"&gt; &lt;p&gt;Hibernate ORM 5.1.17.Final:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This is the final release of the 5.1 series. For future bugfixes, please migrate to 5.3 or later.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This release does not support Java 6 or 7; Java 8 is required. For details, see the &lt;a href="https://hibernate.atlassian.net/browse/HHH-13126"&gt;HHH-13126&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;tag is &lt;a href="http://github.com/hibernate/hibernate-orm/releases/tag/5.1.17"&gt;here&lt;/a&gt;;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;changes are listed &lt;a href="https://hibernate.atlassian.net/projects/HHH/versions/31707"&gt;here&lt;/a&gt; (or, for people without a Hibernate Jira account, &lt;a href="https://hibernate.atlassian.net/secure/ReleaseNote.jspa?projectId=10031&amp;amp;version=31707"&gt;here&lt;/a&gt;);&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;release bundles are at &lt;a href="http://sourceforge.net/projects/hibernate/files/hibernate-orm/5.1.17.Final/"&gt;SourceForge&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For information on consuming the release via your favorite dependency-management-capable build tool, see &lt;a href="http://hibernate.org/orm/releases/5.1" class="bare"&gt;http://hibernate.org/orm/releases/5.1&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/gitvMDB5V7o" height="1" width="1" alt=""/&gt;</content><summary>Hibernate ORM 5.1.17.Final: This is the final release of the 5.1 series. For future bugfixes, please migrate to 5.3 or later. This release does not support Java 6 or 7; Java 8 is required. For details, see the HHH-13126. tag is here; changes are listed here (or, for people without a Hibernate Jira account, here); release bundles are at SourceForge. For information on consuming the release via your...</summary><dc:creator>Gail Badner</dc:creator><dc:date>2018-11-28T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/11/28/hibernate-orm-5117-final-release/</feedburner:origLink></entry><entry><title>What, No Python in RHEL 8 Beta?</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/-aFPcivt8q8/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Python" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="rhel" scheme="searchisko:content:tags" /><category term="RHEL8" scheme="searchisko:content:tags" /><author><name>Langdon White</name></author><id>searchisko:content:id:jbossorg_blog-what_no_python_in_rhel_8_beta</id><updated>2018-11-27T15:00:04Z</updated><published>2018-11-27T15:00:04Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400;"&gt;TL;DR Of course we have Python! You just need to specify if you want Python 3 or 2 as we didnât want to set a default. Give &lt;code&gt;yum install python3&lt;/code&gt; or &lt;code&gt;yum install python2&lt;/code&gt; a try. Or, if you want to see what we recommend you install &lt;code&gt;yum install @python36&lt;/code&gt; or &lt;code&gt;yum install @python27&lt;/code&gt;. Read on for why.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;For prior versions of &lt;a href="https://developers.redhat.com/products/rhel/overview/"&gt;Red Hat Enterprise Linux&lt;/a&gt;, and most &lt;a href="https://developers.redhat.com/topics/linux/"&gt;Linux&lt;/a&gt; Distributions, users have been locked to the system version of Python unless they got away from the system package manager. While this can be true for a lot of tools (ruby: rvm; node: nvm) the Python use case is worse because so many Linux tools (like yum) rely on Python.&lt;/span&gt;&lt;span id="more-535767"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;In order to improve this experience for RHEL8 users, we have moved the Python &lt;a href="https://developers.redhat.com/blog/2018/11/14/python-in-rhel-8/"&gt;used by the system âoff to the side&amp;#8221;&lt;/a&gt;. In RHEL 8 we also introduced Modularity. As a result, in combination with Pythonâs ability to be parallel installed, we can now make multiple versions of Python available and installable, from the standard repositories, installing to the standard locations. Now, users can choose what version of Python they want to run in any given userspace and it simply works. For more info, see my article, &lt;a href="https://developers.redhat.com/blog/2018/11/15/rhel8-introducing-appstreams/"&gt;&lt;em&gt;Introducing Application Streams in RHEL 8&lt;/em&gt;&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;To be honest, the system maintainers also get some advantages of not being locked to an aging version of Python for our system tools. With users not relying on a particular version of Python coming with the system installation, we have the freedom to take advantage of new language features, performance improvements, and all the other goodness a developer gets when tracking near the upstream version.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;However, this has resulted in a dilemma. When a user sits down at a fresh installation of RHEL8 they will naturally expect that &lt;code&gt;/usr/bin/python&lt;/code&gt; will run some version of Python. If you follow the recommendation in &lt;a href="https://www.python.org/dev/peps/pep-0394/"&gt;Python Enhancement Proposal (PEP) 394&lt;/a&gt;, that will be Python 2. However, at some point, a new PEP will likely want to change that recommendation to Python 3, &lt;em&gt;probably during, the typically *10* year, life of RHEL 8!&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;So, what do we do? Well, if we follow the current recommendation, we make some present day users happy. However, when the Python Community shifts to recommending Python 3 as the default, we will make new users unhappy.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;As a result, we came to the tough conclusion, donât provide bare Python at all. Instead, ask our users from the beginning to choose which version of Python they actually want. So, &lt;code&gt;yum install python&lt;/code&gt; results in a 404.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;However, we do try to make it as easy as possible to get Python 2 or 3 (or both) on to your system. We recommend using &lt;code&gt;yum install @python36&lt;/code&gt; or &lt;code&gt;yum install @python27&lt;/code&gt; to take advantage of the recommended set of packages to install. If you really want *just* the Python binary, you can use &lt;code&gt;yum install python3&lt;/code&gt; or &lt;code&gt;yum install python2&lt;/code&gt;.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;We have also setup the alternatives infrastructure so that when you install either (or both) you can easily make /usr/bin/python point to the right place using &lt;code&gt;alternatives --config python&lt;/code&gt;. However, as we explained above, and aligned with the Python PEP, we donât recommend relying on /usr/bin/python being the correct python for your application.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;To conclude, yes, Python is included in RHEL 8! And, it will be even better than in the past! If you want more details on anything in this post, please see the &lt;a href="https://wp.me/p8e0as-2fn5"&gt;How To Guide&lt;/a&gt; on Red Hat Developers.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Oh and if you haven&amp;#8217;t downloaded RHEL 8 yetâgo to &lt;a href="https://developers.redhat.com/rhel8/"&gt;developers.redhat.com/rhel8&lt;/a&gt;Â now.&lt;/strong&gt;&lt;/p&gt; &lt;h2&gt;Additional Information&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/rhel8/"&gt;Red Hat Enterprise Linux 8 Beta for developers&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/15/rhel8-introducing-appstreams/"&gt;Introducing Application Streams in RHEL 8&lt;/a&gt;.&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://wp.me/p8e0as-2fsJ"&gt;Petr Viktorin&amp;#8217;s Python on RHEL 8 article&lt;/a&gt;Â (see the discussion of Platform Python)&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/15/introducing-codeready-linux-builder/" rel="bookmark"&gt;Introducing CodeReady Linux Builder&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/20/buildah-podman-containers-without-daemons/"&gt;Containers without daemons: Podman and Buildah available in RHEL 7.6 and RHEL 8 Beta&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fwhat-no-python-in-rhel-8-beta%2F&amp;#38;linkname=What%2C%20No%20Python%20in%20RHEL%208%20Beta%3F" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fwhat-no-python-in-rhel-8-beta%2F&amp;#38;linkname=What%2C%20No%20Python%20in%20RHEL%208%20Beta%3F" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fwhat-no-python-in-rhel-8-beta%2F&amp;#38;linkname=What%2C%20No%20Python%20in%20RHEL%208%20Beta%3F" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fwhat-no-python-in-rhel-8-beta%2F&amp;#38;linkname=What%2C%20No%20Python%20in%20RHEL%208%20Beta%3F" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fwhat-no-python-in-rhel-8-beta%2F&amp;#38;linkname=What%2C%20No%20Python%20in%20RHEL%208%20Beta%3F" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fwhat-no-python-in-rhel-8-beta%2F&amp;#38;linkname=What%2C%20No%20Python%20in%20RHEL%208%20Beta%3F" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fwhat-no-python-in-rhel-8-beta%2F&amp;#38;linkname=What%2C%20No%20Python%20in%20RHEL%208%20Beta%3F" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fwhat-no-python-in-rhel-8-beta%2F&amp;#38;linkname=What%2C%20No%20Python%20in%20RHEL%208%20Beta%3F" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fwhat-no-python-in-rhel-8-beta%2F&amp;#038;title=What%2C%20No%20Python%20in%20RHEL%208%20Beta%3F" data-a2a-url="https://developers.redhat.com/blog/2018/11/27/what-no-python-in-rhel-8-beta/" data-a2a-title="What, No Python in RHEL 8 Beta?"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/27/what-no-python-in-rhel-8-beta/"&gt;What, No Python in RHEL 8 Beta?&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/-aFPcivt8q8" height="1" width="1" alt=""/&gt;</content><summary>TL;DR Of course we have Python! You just need to specify if you want Python 3 or 2 as we didnât want to set a default. Give yum install python3 or yum install python2 a try. Or, if you want to see what we recommend you install yum install @python36 or yum install @python27. Read on for why. For prior versions of Red Hat Enterprise Linux, and most Linux Distributions, users have been locked to the ...</summary><dc:creator>Langdon White</dc:creator><dc:date>2018-11-27T15:00:04Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/27/what-no-python-in-rhel-8-beta/</feedburner:origLink></entry><entry><title>Audit log mode applied to all audit data</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/eHUFLliYVzQ/audit-log-mode-applied-to-all-audit-data.html" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><author><name>Maciej Swiderski</name></author><id>searchisko:content:id:jbossorg_blog-audit_log_mode_applied_to_all_audit_data</id><updated>2018-11-27T13:06:14Z</updated><published>2018-11-27T13:06:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;jBPM allows to store so called audit logs in various modes&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;JPA (default)&lt;/li&gt;&lt;li&gt;JMS&lt;/li&gt;&lt;li&gt;None&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;b&gt;JPA&lt;/b&gt; mode means that data will be stored directly and within the same transaction as process execution. That usually have some additional performance overhead although it's certainly not significant and unless huge volume is expected is a sound default setting.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;JMS&lt;/b&gt; mode means that all audit data will be stored in background and the engine will push all required data via JMS layer. That allows to offload main thread from being responsible for storing audit logs and then allow to process more process instances while JMS listener will deal with storing audit logs in background.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;None&lt;/b&gt; mode means that audit logs won't be stored at all, which might make sense in some cases (usually straight through processes) so the audit data is not required. Keep in mind that with disabled audit logs (set to None mode) both jBPM console and Kie Server features are limited as they do rely on audit data.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Until 7.15 audit mode applied only to process related audit data and that consists of&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;ProcessInstanceLog&lt;/li&gt;&lt;li&gt;NodeInstanceLog&lt;/li&gt;&lt;li&gt;VariableInstanceLog&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;it has been improved to cover all audit logs that span across processes, user tasks and cases. With that said it covers (in addition to listed above) following&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;AuditTaskImpl&lt;/li&gt;&lt;li&gt;TaskEvent&lt;/li&gt;&lt;li&gt;TaskVariableImpl&lt;/li&gt;&lt;li&gt;CaseFileDataLog&lt;/li&gt;&lt;li&gt;CaseRoleAssignmentLog&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;BAMTaskSummary is not covered with audit mode except for NONE mode which also disables BAM logging.&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Configuration&lt;/h3&gt;&lt;div&gt;JPA and NONE mode do not require additional configuration and can be used directly after installation. JMS does need a bit of configuration to allow to take advantage of JMS layer.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;This sample configuration assumes the runtime environment is based on WildFly (or EAP) as application server.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;h4 style="text-align: left;"&gt;Enable JMS queue creation in kie-server-jms.xml&lt;/h4&gt;&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;/ul&gt;&lt;div&gt;First you need to enable dedicated JMS queue for sending audit data through. To do so, go to &amp;nbsp;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;kie-server.war/META-INF&lt;/span&gt; and edit &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;kie-server-jms.xml&lt;/span&gt; file. Locate the commended queue named&amp;nbsp;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;KIE.SERVER.AUDIT&lt;/span&gt; and uncomment the entire queue configuration, it should look like&lt;br /&gt;&lt;br /&gt;&lt;pre class="brush:xml"&gt;&amp;lt;messaging-deployment xmlns="urn:jboss:messaging-activemq-deployment:1.0"&amp;gt;&lt;br /&gt; &amp;lt;server name="default"&amp;gt;&lt;br /&gt; &amp;lt;jms-destinations&amp;gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;!-- Kie Server REQUEST queue --&amp;gt;&lt;br /&gt; &amp;lt;jms-queue name="KIE.SERVER.REQUEST"&amp;gt;&lt;br /&gt; &amp;lt;entry name="queue/KIE.SERVER.REQUEST" /&amp;gt;&lt;br /&gt; &amp;lt;entry name="java:jboss/exported/jms/queue/KIE.SERVER.REQUEST" /&amp;gt;&lt;br /&gt; &amp;lt;/jms-queue&amp;gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;!-- Kie Server RESPONSE queue --&amp;gt;&lt;br /&gt; &amp;lt;jms-queue name="KIE.SERVER.RESPONSE"&amp;gt;&lt;br /&gt; &amp;lt;entry name="queue/KIE.SERVER.RESPONSE" /&amp;gt;&lt;br /&gt; &amp;lt;entry name="java:jboss/exported/jms/queue/KIE.SERVER.RESPONSE" /&amp;gt;&lt;br /&gt; &amp;lt;/jms-queue&amp;gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;!-- Kie Server EXECUTOR queue --&amp;gt;&lt;br /&gt; &amp;lt;jms-queue name="KIE.SERVER.EXECUTOR"&amp;gt;&lt;br /&gt; &amp;lt;entry name="queue/KIE.SERVER.EXECUTOR" /&amp;gt;&lt;br /&gt; &amp;lt;/jms-queue&amp;gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;!-- JMS queue for signals --&amp;gt;&lt;br /&gt; &amp;lt;!-- enable when external signals are required --&amp;gt;&lt;br /&gt; &amp;lt;!--&lt;br /&gt; &amp;lt;jms-queue name="KIE.SERVER.SIGNAL.QUEUE"&amp;gt;&lt;br /&gt; &amp;lt;entry name="queue/KIE.SERVER.SIGNAL" /&amp;gt;&lt;br /&gt; &amp;lt;entry name="java:jboss/exported/jms/queue/KIE.SERVER.SIGNAL" /&amp;gt;&lt;br /&gt; &amp;lt;/jms-queue&amp;gt;&lt;br /&gt; --&amp;gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;!-- JMS queue for audit --&amp;gt;&lt;br /&gt; &amp;lt;!-- enable when jms mode for audit is required --&amp;gt;&lt;br /&gt; &amp;lt;!----&amp;gt;&lt;br /&gt; &amp;lt;jms-queue name="KIE.SERVER.AUDIT"&amp;gt;&lt;br /&gt; &amp;lt;entry name="queue/KIE.SERVER.AUDIT"/&amp;gt;&lt;br /&gt; &amp;lt;entry name="java:jboss/exported/jms/queue/KIE.SERVER.AUDIT"/&amp;gt;&lt;br /&gt; &amp;lt;/jms-queue&amp;gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;/jms-destinations&amp;gt;&lt;br /&gt; &amp;lt;/server&amp;gt;&lt;br /&gt;&amp;lt;/messaging-deployment&amp;gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;h4 style="text-align: left;"&gt;Enable message listener in ejb-jar.xml&lt;/h4&gt;Next, go to &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;kie-server.war/WEB-INF&lt;/span&gt; and edit &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;ejb-jar.xml&lt;/span&gt; file. Locate &amp;nbsp;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;CompositeAsyncAuditLogReceiver&lt;/span&gt; and uncomment entire section for that message driven bean. Also uncomment the &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;enterprise-beans&lt;/span&gt; tags for the document.&lt;br /&gt;It should look like below&lt;br /&gt;&lt;pre class="brush:xml"&gt;&lt;br /&gt;&amp;lt;ejb-jar id="ejb-jar_ID" version="3.1"&lt;br /&gt; xmlns="http://java.sun.com/xml/ns/javaee"&lt;br /&gt; xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&lt;br /&gt; xsi:schemaLocation="http://java.sun.com/xml/ns/javaee&lt;br /&gt; http://java.sun.com/xml/ns/javaee/ejb-jar_3_1.xsd"&amp;gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;!----&amp;gt;&lt;br /&gt; &amp;lt;enterprise-beans&amp;gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;!-- enable when external signals are required and queue and connection factory is defined&lt;br /&gt; &amp;lt;message-driven&amp;gt;&lt;br /&gt; &amp;lt;ejb-name&amp;gt;JMSSignalReceiver&amp;lt;/ejb-name&amp;gt;&lt;br /&gt; &amp;lt;ejb-class&amp;gt;org.jbpm.process.workitem.jms.JMSSignalReceiver&amp;lt;/ejb-class&amp;gt;&lt;br /&gt; &amp;lt;transaction-type&amp;gt;Bean&amp;lt;/transaction-type&amp;gt;&lt;br /&gt; &amp;lt;activation-config&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-name&amp;gt;destinationType&amp;lt;/activation-config-property-name&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-value&amp;gt;javax.jms.Queue&amp;lt;/activation-config-property-value&amp;gt;&lt;br /&gt; &amp;lt;/activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-name&amp;gt;destination&amp;lt;/activation-config-property-name&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-value&amp;gt;java:/queue/KIE.SERVER.SIGNAL&amp;lt;/activation-config-property-value&amp;gt;&lt;br /&gt; &amp;lt;/activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;/activation-config&amp;gt;&lt;br /&gt; &amp;lt;/message-driven&amp;gt;&lt;br /&gt; --&amp;gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;!-- enable when jms mode for audit is required and queue and connection factory is defined--&amp;gt;&lt;br /&gt; &amp;lt;message-driven&amp;gt;&lt;br /&gt; &amp;lt;ejb-name&amp;gt;CompositeAsyncAuditLogReceiver&amp;lt;/ejb-name&amp;gt;&lt;br /&gt; &amp;lt;ejb-class&amp;gt;org.jbpm.kie.services.impl.CompositeAsyncAuditLogReceiver&amp;lt;/ejb-class&amp;gt;&lt;br /&gt; &amp;lt;transaction-type&amp;gt;Container&amp;lt;/transaction-type&amp;gt;&lt;br /&gt; &amp;lt;activation-config&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-name&amp;gt;destinationType&amp;lt;/activation-config-property-name&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-value&amp;gt;javax.jms.Queue&amp;lt;/activation-config-property-value&amp;gt;&lt;br /&gt; &amp;lt;/activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-name&amp;gt;destination&amp;lt;/activation-config-property-name&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-value&amp;gt;java:/queue/KIE.SERVER.AUDIT&amp;lt;/activation-config-property-value&amp;gt;&lt;br /&gt; &amp;lt;/activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-name&amp;gt;maxSession&amp;lt;/activation-config-property-name&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-value&amp;gt;1&amp;lt;/activation-config-property-value&amp;gt;&lt;br /&gt; &amp;lt;/activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;/activation-config&amp;gt;&lt;br /&gt; &amp;lt;/message-driven&amp;gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;!----&amp;gt;&lt;br /&gt; &amp;lt;/enterprise-beans&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;/ejb-jar&amp;gt;&lt;br /&gt;&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;h4 style="text-align: left;"&gt;Configure JMS related config for audit logs&lt;/h4&gt;&lt;/div&gt;&lt;ul style="text-align: left;"&gt;&lt;/ul&gt;Lastly, go to &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;kie-server.war/WEB-INF/classes&lt;/span&gt; and rename the &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;wildfly-&lt;/span&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;jbpm.audit.jms.properties&lt;/span&gt; to&amp;nbsp;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;jbpm.audit.jms.properties&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;And that's all that is required to make use of JMS audit logging in jBPM. For other applications servers, make sure to create JMS queue (and then refer to it in ejb-jar.xml file) according to application server guides for JMS.&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/eHUFLliYVzQ" height="1" width="1" alt=""/&gt;</content><summary>jBPM allows to store so called audit logs in various modes JPA (default) JMS None JPA mode means that data will be stored directly and within the same transaction as process execution. That usually have some additional performance overhead although it's certainly not significant and unless huge volume is expected is a sound default setting. JMS mode means that all audit data will be stored in back...</summary><dc:creator>Maciej Swiderski</dc:creator><dc:date>2018-11-27T13:06:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2018/11/audit-log-mode-applied-to-all-audit-data.html</feedburner:origLink></entry><entry><title>Solving the challenges of debugging microservices on a container platform</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/WN2mw_EF06Q/" /><category term="ansible" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="debugging" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="istio" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="opentracing" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="service mesh" scheme="searchisko:content:tags" /><category term="Squash" scheme="searchisko:content:tags" /><category term="Telepresence" scheme="searchisko:content:tags" /><author><name>Didier Wojciechowski</name></author><id>searchisko:content:id:jbossorg_blog-solving_the_challenges_of_debugging_microservices_on_a_container_platform</id><updated>2018-11-27T13:00:13Z</updated><published>2018-11-27T13:00:13Z</published><content type="html">&lt;p&gt;Microservices have become mainstream in the enterprise. This proliferation of &lt;a href="http://rhdp-drupal.redhat.com/topics/microservices"&gt;microservices&lt;/a&gt; applications generates new problems, which requires a new approach to managing problems. A microservice is a small, independently deployable, and independently scalable software service that is designed to encapsulate a specific semantic function in the larger application&lt;a href="#references"&gt;&lt;sup&gt;l&lt;/sup&gt;&lt;/a&gt;. This article explores several approaches to deploying tools to debug microservices applications on a &lt;a href="http://rhdp-drupal.redhat.com/topics/kubernetes"&gt;Kubernetes&lt;/a&gt; platform like &lt;a href="https://developers.redhat.com/products/openshift/overview/"&gt;Red Hat OpenShift&lt;/a&gt;, includingÂ &lt;a href="https://developers.redhat.com/blog/2017/07/10/using-opentracing-with-jaeger-to-collect-application-metrics-in-kubernetes/"&gt;OpenTracing&lt;/a&gt;,Â  Squash, Telepresence, and creating a Squash Operator in &lt;a href="https://www.redhat.com/en/technologies/management/ansible"&gt;Red Hat Ansible Automation&lt;/a&gt;.&lt;span id="more-533687"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Expect challenges and changes on the microservices journey&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;A typical traditional monolithic application consists of a single process. It is easy to attach a debugger to this process to have a complete view of the runtime state of the application. In contrast, a microservices application can be composed of hundreds of processes. The main problem with debugging and finding the root cause in a distributed system is being able to recreate the state of the system when the error occurred so that you can obtain a holistic view. For this reason, troubleshooting is more difficult in a microservices environment, &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Importantly, identifying the root cause of issues in microservices application can have a direct business impact.Â &lt;/span&gt;In fact, &lt;strong&gt;40%&lt;/strong&gt;&lt;a href="#references"&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;Â to &lt;strong&gt;90%&lt;/strong&gt;&lt;a href="#references"&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Â of total software costs of are typically incurred after launch. It is important to knowing the right techniques and to deploying the right debugging tools in order to reduce time and money spent to correct software code.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Technical challenges with microservices applications&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Microservices applications present unique challenges. Communication between services is asynchronous and not reliable, making errors difficult to reproduce. Moreover, s&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;ervices often interact with one another intermittently. The fine-grained approach to developing microservices lets developers choose the best language and framework for a specific job. As such, microservices can be written in different languages, and may be running across several different nodes. Together, these properties can make transactions difficult to step through.&lt;/span&gt;&lt;/p&gt; &lt;p style="padding-left: 30px;"&gt;&lt;em&gt;&lt;span style="font-weight: 400;"&gt;â&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Debugging microservices applications is a difficult task. The state of the application is spread across multiple microservices, and itâs hard to get a holistic view of the state of the application.Â Â &lt;/span&gt;&lt;/em&gt;&lt;span style="font-weight: 400;"&gt;&lt;em&gt;Currently, debugging of microservices is often assisted by &lt;a href="http://opentracing.io/"&gt;OpenTracing&lt;/a&gt;, which helps in tracing of a transaction or workflow for postmortem analysis and more recently by &lt;a href="https://developers.redhat.com/topics/service-mesh/"&gt;service meshes&lt;/a&gt; like &lt;a href="https://developers.redhat.com/topics/service-mesh/"&gt;Istio&lt;/a&gt;, which monitor the network to identify latency problems in real-time. However, these tools do not allow you to monitor and interfere with the application during runtime&amp;#8221;&lt;/em&gt;Â (&lt;a href="https://github.com/solo-io/squash"&gt;solo.io&lt;/a&gt;).&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;OpenTracing&lt;/span&gt;&lt;/h2&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://opentracing.io"&gt;OpenTracing&lt;/a&gt; is an API specification for distributed tracing, and is the third hosted Cloud Native Computing Foundation (CNCF) project after Kubernetes and Prometheus. Jaeger is one of the most well-known OpenTracing implementations, and it is the distributed tracing solution used by &lt;a href="https://istio.io/docs/tasks/telemetry/distributed-tracing/"&gt;Istio for Telemetry&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-weight: 400;"&gt;OpenTracing is often considered to be resource intensive, and logging the state of an application during runtime can result in a performance overhead. The BLOGÂ &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://medium.com/opentracing/take-opentracing-for-a-hotrod-ride-f6e3141f7941"&gt;Take OpenTracing for a HotROD Ride&lt;/a&gt;Â details the optimization of a HotRod ride app developed by Uber (see screenshot below). The article involves successive optimizations of a Go-based Ride-on-Demand demonstration service, all informed by tracing data.&lt;/span&gt;&lt;/p&gt; &lt;h6 style="text-align: center;"&gt;&lt;span style="font-weight: 400;"&gt;&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-533717 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.42.46-1024x336.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.42.46.png" alt="" width="1466" height="481" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.42.46.png 1466w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.42.46-300x98.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.42.46-768x252.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.42.46-1024x336.png 1024w" sizes="(max-width: 1466px) 100vw, 1466px" /&gt;&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Picture 1 : HotRod Ride apps developed by Uber&lt;br /&gt; &lt;/span&gt;&lt;/h6&gt; &lt;h3 style="text-align: left;"&gt;&lt;span style="font-weight: 400;"&gt;Running OpenTracing in OpenShift&lt;/span&gt;&lt;/h3&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-weight: 400;"&gt;To run the HotRod example in OpenShift, execute the steps below:&lt;/span&gt;&lt;/p&gt; &lt;p class="selectionShareable" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;&lt;code class="notranslate"&gt;$ oc new-project jaeger-demo&lt;/code&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;code class="notranslate"&gt;$ oc process -f https://raw.githubusercontent.com/jaegertracing/jaeger-openshift/master/all-in-one/jaeger-all-in-one-template.yml | oc create -f -&lt;/code&gt;&lt;br /&gt; &lt;code class="notranslate"&gt;$ oc import-image jaegertracing/example-hotrod:1.6 --confirm&lt;/code&gt;&lt;br /&gt; &lt;code class="notranslate"&gt;$ oc process -f https://raw.githubusercontent.com/dwojciec/debugging-microservices/master/jaeger/hotrod-app.yml | oc create -f -&lt;/code&gt;&lt;br /&gt; &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-533737 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.55.26-1024x480.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.55.26.png" alt="" width="1467" height="688" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.55.26.png 1467w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.55.26-300x141.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.55.26-768x360.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.55.26-1024x480.png 1024w" sizes="(max-width: 1467px) 100vw, 1467px" /&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://github.com/jaegertracing/jaeger/tree/master/examples/hotrod/cmd"&gt;Source code for HotROD apps&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;h4&gt;&lt;span style="font-weight: 400;"&gt;Pros of this approach include:&lt;/span&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Logging &amp;#8211; easy to output to any logging tool&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Context propagation &amp;#8211; use baggage to carry request and user IDâs, etc.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Critical path analysis &amp;#8211; drill down into request latency&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;System topology analysis &amp;#8211; identify bottlenecks due to shared resource&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Metrics/alerting &amp;#8211; measure based on tags, span time, log data&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h4&gt;&lt;span style="font-weight: 400;"&gt;Cons of this approach include:&lt;/span&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;OpenTracing does not provide run-time debugging&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;OpenTracing requires wrapping and changing the code&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;It is impossible to change variable values in runtime&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;The process is expansive, requiring repeatedly modifying and testing the application&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Squash&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Squash allows runtime debugging on distributed applications and is integrated with integrated development environments (IDEs) such as Visual Studio code and IntelliJ. Squash is deployed to the cluster as a server and a DaemonSet, with your IDE acting as the Squash UI. Once the applicationsâ pods have been retrieved, use your IDE to attach to one of the running pods where you can select the service on which to startÂ your debug session.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-533747 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.06.30-1024x616.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.06.30.png" alt="" width="1632" height="981" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.06.30.png 1632w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.06.30-300x180.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.06.30-768x462.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.06.30-1024x616.png 1024w" sizes="(max-width: 1632px) 100vw, 1632px" /&gt;&lt;br /&gt; &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;More information regarding &lt;/span&gt;&lt;a href="https://github.com/solo-io/squash/blob/master/docs/techincal-overview.md"&gt;&lt;span style="font-weight: 400;"&gt;Squash solution architecture&lt;/span&gt;&lt;/a&gt;Â is available.&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;With Squash, you can:&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;â¢ Perform live debugging across multiple microservices&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;â¢ Debug a container in a pod&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;â¢ Debug a service&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;â¢ Set breakpoints&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;â¢ Step through the code&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;â¢ View and modify values of variables&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;/p&gt; &lt;h3 style="text-align: left;"&gt;&lt;span style="font-weight: 400;"&gt;Running Squash in Openshift&lt;/span&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400; color: #333333;"&gt;Prerequisites :&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Â Use Openshift version 3.9 as higher versions are not yet tested. For versions higher than 3.9 you have to change the version of the squash image (from v0.2.1 to v0.3.1).&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://hub.docker.com/r/soloio/squash-server/tags/"&gt;Squash-server&lt;/a&gt; and &lt;a href="https://hub.docker.com/r/soloio/squash-client/tags/"&gt;squash-client&lt;/a&gt; images are available.&lt;/span&gt;&lt;/p&gt; &lt;h4&gt;&lt;span style="font-weight: 400;"&gt;To deploy a Squash application in OpenShift, follow the steps below:&lt;/span&gt;&lt;/h4&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;$ oc new-project squash&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ oc process -f https://raw.githubusercontent.com/dwojciec/debugging-microservices/master/squash/squash-template.yaml -l name=squash | oc create -f -&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ oc adm policy add-scc-to-user privileged -z squash-client&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ oc get route&lt;/span&gt; &lt;/pre&gt; &lt;h4&gt;&lt;span style="font-weight: 400;"&gt;The Squash command-line interface (CLI) can be &lt;a href="https://github.com/solo-io/squash/tree/master/docs/install#command-line-interface-cli"&gt;installed locally&lt;/a&gt;. Additional information on the &lt;a href="https://github.com/solo-io/squash/blob/master/docs/cli.md"&gt;Squash CLI&lt;/a&gt; is available&lt;br /&gt; &lt;/span&gt;&lt;/h4&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;$ export SQUASH_SERVER_URL=&amp;#60;route exposed&amp;#62;/api/v2 $ squash list a State |ID |Debugger |Image |Debugger Address&lt;/span&gt; &lt;/pre&gt; &lt;h4&gt;&lt;span style="font-weight: 400;"&gt;Install a Squash plugin for the appropriate IDE (&lt;a href="https://github.com/solo-io/squash/blob/master/docs/IDEs.md#ides"&gt;Visual Studio code and Intellij&lt;/a&gt;)Â and &lt;a href="https://github.com/solo-io/squash-vscode/blob/master/docs/example-app-kubernetes.md"&gt;setup the IDE&lt;/a&gt;.&lt;/span&gt;&lt;/h4&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-533787 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.20.05-1024x733.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.20.05.png" alt="" width="1055" height="755" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.20.05.png 1055w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.20.05-300x215.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.20.05-768x550.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.20.05-1024x733.png 1024w" sizes="(max-width: 1055px) 100vw, 1055px" /&gt;&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-533797 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.21.32-1024x632.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.21.32.png" alt="" width="1174" height="725" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.21.32.png 1174w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.21.32-300x185.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.21.32-768x474.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.21.32-1024x632.png 1024w" sizes="(max-width: 1174px) 100vw, 1174px" /&gt;&lt;/p&gt; &lt;h4&gt;&lt;span style="font-weight: 400;"&gt;Deploy a sample application to use Squash.&lt;/span&gt;&lt;/h4&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;$ oc new-project demo-squash&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ oc process -f https://raw.githubusercontent.com/dwojciec/debugging-microservices/master/squash/demo-squash.yaml | oc create -f -&lt;/span&gt;&lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Note:&lt;/span&gt;&lt;span style="font-weight: 400;"&gt; I added an &lt;/span&gt;&lt;a href="https://docs.openshift.com/container-platform/3.10/install_config/configuring_routing.html"&gt;&lt;span style="font-weight: 400;"&gt;annotation&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; on the route definition &lt;/span&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;haproxy.router.openshift.io/timeout: 5m to debug the application.&lt;/span&gt;&lt;/i&gt;&lt;/p&gt; &lt;h4&gt;&lt;span style="font-weight: 400;"&gt;Clone the application locally on your system.&lt;/span&gt;&lt;/h4&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;$ git clone https://github.com/solo-io/squash.git&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ cd squash/contrib/example&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ code ~/squash/contrib/example/service1/&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ idea ~/squash/contrib/example/service2-java&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Restart pod of the demo application to release any debug attachment&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ oc delete pod --all --grace-period=0 -n demo-squash &lt;/span&gt;&lt;/pre&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Telepresence&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Telepresence offers another alternative to debuging code deployed on a Kubernetes cluster.Â &lt;/span&gt;&lt;a href="https://www.telepresence.io/"&gt;&lt;span style="font-weight: 400;"&gt;Telepresence&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; is currently a &lt;/span&gt;&lt;a href="https://landscape.cncf.io/cncf=sandbox"&gt;&lt;span style="font-weight: 400;"&gt;sandbox project at the CNCF&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;.Â &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Using Telepresence on Openshift is presented &lt;/span&gt;&lt;a href="https://www.telepresence.io/tutorials/openshift"&gt;&lt;span style="font-weight: 400;"&gt;here&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; and in a blog post titled â&lt;/span&gt;&lt;a href="https://blog.openshift.com/telepresence-local-development/"&gt;&lt;span style="font-weight: 400;"&gt;Telepresence for local developement&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;â.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;References to go further: &lt;/span&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://www.weave.works/blog/debugging-and-troubleshooting-microservices-in-kubernetes"&gt;&lt;span style="font-weight: 400;"&gt;Debugging and Troubleshooting Microservices in Kubernetes with Ray Tsang (Google)&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.weave.works/blog/debugging-microservices-squash-vs-telepresence"&gt;&lt;span style="font-weight: 400;"&gt;Debugging microservices &amp;#8211; Squash vs. Telepresence&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://kubernetes.io/blog/2018/05/01/developing-on-kubernetes/"&gt;&lt;span style="font-weight: 400;"&gt;Developing on Kubernetes&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://itnext.io/development-and-debugging-with-kubernetes-296bb60d9549"&gt;&lt;span style="font-weight: 400;"&gt;Development and Debugging with Kubernetes&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://jaxenter.com/rookout-debug-kubernetes-151062.html"&gt;Rookout: breakpoints for Kubernetes ?&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Debugging techniques:&lt;/span&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://www.infoq.com/presentations/google-debug-microservices"&gt;&lt;span style="font-weight: 400;"&gt;Debugging Microservices: How Google SREs Resolve Outages&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://thenewstack.io/debugging-microservices-lessons-from-google-facebook-lyft/"&gt;&lt;span style="font-weight: 400;"&gt;Debugging Microservices: Lessons from Google, Facebook, Lyft&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2017/08/16/troubleshooting-java-applications-on-openshift/"&gt;&lt;span style="font-weight: 400;"&gt;Troubleshooting Java applications on OpenShift&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://itnext.io/debug-a-go-application-in-kubernetes-from-ide-c45ad26d8785"&gt;&lt;span style="font-weight: 400;"&gt;Debug a Go Application in Kubernetes from IDE&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; (The Hard Way).&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Creating a Squash Ansible Operator&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Based on the&lt;/span&gt;&lt;a href="https://github.com/operator-framework/operator-sdk/blob/master/doc/ansible/user-guide.md"&gt;&lt;span style="font-weight: 400;"&gt; User Guide&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; which walks through an example of building a simple memcached-Operator powered by Ansible tools and librairies provided by the Operator SDK, I decided to build my Squash Operator.Â &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://github.com/dwojciec/squash-operator"&gt;Source code&lt;/a&gt;Â is available.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;An Operator is a Kubernetes controller that deploys and manages an applicationâs resources and services in Kubernetes. In Kubernetes each of your applicationâs resources can be defined by a custom resource definition (CRD). CRDs uniquely identify your applications custom resources by its Group, Version, and Kind in a Kubernetes cluster. Once the CRDs have been created, you would then create an instance of the custom resource, or CR, with a unique name.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-533867 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.42.14-1024x543.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.42.14.png" alt="" width="1260" height="668" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.42.14.png 1260w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.42.14-300x159.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.42.14-768x407.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.42.14-1024x543.png 1024w" sizes="(max-width: 1260px) 100vw, 1260px" /&gt;&lt;br /&gt; &lt;/span&gt;&lt;/p&gt; &lt;h3&gt;&lt;span style="font-weight: 400;"&gt;Create a new operator&lt;/span&gt;&lt;/h3&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;$ $GOPATH/bin/operator-sdk --version&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;operator-sdk version 0.0.6+git&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ mkdir -p -p $GOPATH/src/github.com/squash-operator/&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ cd $GOPATH/src/github.com/squash-operator/&lt;/span&gt;&lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;The Operator SDK provides an option to create an Ansible Operator. An Ansible Operator leverages the full power of Ansible and it does not require the knowledge or the experience of any other programming language like GO or Java. You simply write some Ansible code and edit a few YAML files to get your Operator up and running.&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;$ $GOPATH/bin/operator-sdk new squash-operator --api-version=app.example.com/v1alpha1 --kind=Squash --type=ansible&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;operator-sdk version 0.0.6+git&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Create squash-operator/tmp/init/galaxy-init.sh&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Create squash-operator/tmp/build/Dockerfile&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Create squash-operator/tmp/build/test-framework/Dockerfile&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Create squash-operator/tmp/build/go-test.sh&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Rendering Ansible Galaxy role [squash-operator/roles/Squash]...&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Cleaning up squash-operator/tmp/init&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Create squash-operator/watches.yaml&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Create squash-operator/deploy/rbac.yaml Create squash-operator/deploy/crd.yaml &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Create squash-operator/deploy/cr.yaml &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Create squash-operator/deploy/operator.yaml &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Run git init ... &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Initialized empty Git repository in /Users/dwojciec/go/src/github.com/squash-operator/squash-operator/.git &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Run git init done &lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;cd&lt;/span&gt;&lt;span style="font-weight: 400;"&gt; squash-operator&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ tree . âââ deploy â Â Â âââ cr.yaml â Â Â âââ crd.yaml â Â Â âââ operator.yaml â Â Â âââ rbac.yaml âââ roles â Â Â âââ Squash â Â Â Â Â Â Â âââ README.md â Â Â Â Â Â Â âââ defaults â Â Â Â Â Â Â â âââ main.yml â Â Â Â Â Â Â âââ files â Â Â Â Â Â Â âââ handlers â Â Â Â Â Â Â â âââ main.yml â Â Â Â Â Â Â âââ meta â Â Â Â Â Â Â â âââ main.yml â Â Â Â Â Â Â âââ tasks â Â Â Â Â Â Â â âââ main.yml â Â Â Â Â Â Â âââ templates â Â Â Â Â Â Â âââ tests â Â Â Â Â Â Â â âââ inventory â Â Â Â Â Â Â â âââ test.yml â Â Â Â Â Â Â âââ vars â Â Â Â Â Â Â Â Â Â Â âââ main.yml âââ tmp â Â Â âââ build â Â Â Â Â Â Â âââ Dockerfile â Â Â Â Â Â Â âââ go-test.sh â Â Â Â Â Â Â âââ test-framework â Â Â Â Â Â Â Â Â Â Â âââ Dockerfile âââ watches.yaml 14 directories, 16 files &lt;/span&gt;&lt;/pre&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-533897 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.43-1024x523.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.43.png" alt="" width="1252" height="640" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.43.png 1252w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.43-300x153.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.43-768x393.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.43-1024x523.png 1024w" sizes="(max-width: 1252px) 100vw, 1252px" /&gt;&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-533887 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.51-1024x435.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.51.png" alt="" width="1273" height="541" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.51.png 1273w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.51-300x127.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.51-768x326.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.51-1024x435.png 1024w" sizes="(max-width: 1273px) 100vw, 1273px" /&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Once all the code is generated by the Operator SDK. Go to the deploy directory to check the content of all files.&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;$ pwd &lt;/span&gt; &lt;span style="font-weight: 400;"&gt;/Users/dwojciec/go/src/github.com/squash-operator/squash-operator/deploy&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ tree . âââ cr.yaml âââ crd.yaml âââ operator.yaml âââ rbac.yaml 0 directories, 4 files &lt;/span&gt;&lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;I updated rbac.yaml with &lt;a href="https://raw.githubusercontent.com/dwojciec/squash-operator/master/deploy/rbac.yaml"&gt;this code&lt;/a&gt;&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;. Check the content of the rbac.yaml file because by default the namespace used is the &lt;/span&gt;&lt;b&gt;default&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; one for &lt;/span&gt;&lt;b&gt;ClusterRoleBinding&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; and you may want to use a different project to deploy your application. In my case I deployed my Operator in a project I created named &lt;/span&gt;&lt;b&gt;operator-squash&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; . I added and created a &lt;/span&gt;&lt;a href="https://raw.githubusercontent.com/dwojciec/squash-operator/master/deploy/sa.yaml"&gt;&lt;span style="font-weight: 400;"&gt;sa.yaml&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; file to define &lt;/span&gt;&lt;b&gt;ServiceAccount&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; for my application &lt;/span&gt;&lt;b&gt;squash-operator&lt;/b&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;&lt;span style="font-weight: 400;"&gt;Building the Squash Ansible Role&lt;/span&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;The first thing to do is to modify the generated Ansible role under &lt;/span&gt;&lt;b&gt;&lt;i&gt;roles/Squash&lt;/i&gt;&lt;/b&gt;&lt;span style="font-weight: 400;"&gt;. This Ansible Role controls the logic that is executed when a resource is modified.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;I updated the empty file&lt;/span&gt; &lt;a href="https://raw.githubusercontent.com/dwojciec/squash-operator/master/roles/Squash/tasks/main.yml"&gt;&lt;b&gt;roles/Squash/tasks/main.yaml&lt;/b&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; with the following:&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt; --- # tasks file for squash-server - name: start squash-server k8s: definition: kind: Deployment apiVersion: apps/v1 metadata: name: squash-server namespace: '{{ meta.namespace }}' spec: selector: matchLabels: app: squash-server template: metadata: labels: app: squash-server spec: containers: - name: squash-server image: soloio/squash-server:v0.2.1 - name: start squash-client k8s: state: present definition: "{{ lookup('template', '/opt/ansible/k8s/squash-client.yml') | from_yaml }}" - name: create squash-server service k8s: state: present definition: "{{ lookup('template', '/opt/ansible/k8s/squash-server-svc.yml') | from_yaml }}" &lt;/span&gt;&lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;This Ansible task is creating a Kubernetes deployment using the &lt;a href="https://docs.ansible.com/ansible/2.6/modules/k8s_module.html"&gt;k8s Ansible module&lt;/a&gt; whichÂ &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;allows you to easily interact with the kubernetes resources idempotently. &lt;/span&gt;&lt;/p&gt; &lt;h3&gt;&lt;span style="font-weight: 400;"&gt;Update of the Dockerfile (tmp/build/Dockerfile)&lt;/span&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Inside the &lt;/span&gt;&lt;b&gt;Â &lt;/b&gt;&lt;a href="https://raw.githubusercontent.com/dwojciec/squash-operator/master/roles/Squash/tasks/main.yml"&gt;&lt;b&gt;roles/Squash/tasks/main.yaml&lt;/b&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; Â file Iâm using multiples external files such as &amp;#8216;/opt/ansible/k8s/squash-server-svc.yml&amp;#8217;. To consume these files I updated the Dockerfile to add them.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;I updated squash-operator/tmp/build/Dockerfile from:&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;FROM quay.io/water-hole/ansible-operator COPY roles/ ${HOME}/roles/ COPY watches.yaml ${HOME}/watches.yaml&lt;/span&gt; &lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;To:&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;FROM quay.io/water-hole/ansible-operator COPY k8s/ ${HOME}/k8s/ COPY roles/ ${HOME}/roles/ COPY playbook.yaml ${HOME}/playbook.yaml COPY watches.yaml ${HOME}/watches.yaml&lt;/span&gt; &lt;/pre&gt; &lt;h3&gt;&lt;span style="font-weight: 400;"&gt;Update the the watches.yaml file&lt;/span&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;By default the Operator SDK generated &lt;/span&gt;&lt;b&gt;watches.yaml&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; file watches Squash resource events and executes Ansible &lt;/span&gt;&lt;b&gt;Role&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; Squash.&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt; $ cat watches.yaml --- - version: v1alpha1 group: app.example.com kind: Squash role: /opt/ansible/roles/Squash&lt;/span&gt; &lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;I decided to use the &lt;/span&gt;&lt;b&gt;Playbook&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; option by specifying a&lt;/span&gt;&lt;b&gt;&lt;i&gt; playbook.yaml&lt;/i&gt;&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; file inside &lt;/span&gt;&lt;b&gt;&lt;i&gt;watch.yaml &lt;/i&gt;&lt;/b&gt;&lt;span style="font-weight: 400;"&gt;which will configure the operator to use this specified path when launching ansible-runner with the Ansible Playbook.&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt; --- - version: v1alpha1 group: app.example.com kind: Squash playbook: /opt/ansible/playbook.yaml finalizer: name: finalizer.app.example.com vars: sentinel: finalizer_running&lt;/span&gt; &lt;/pre&gt; &lt;h3&gt;&lt;span style="font-weight: 400;"&gt;Build and run the Operator&lt;/span&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Before running the Squash Operator, Kubernetes needs to know about the new CRD the Operator will be watching.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Deploy the CRD as follows:&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt; $ oc new-project operator-squash $ kubectl create -f deploy/crd.yaml&lt;/span&gt; &lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Then build the squash-operator image and push it to a registry.&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt; $ $GOPATH/bin/operator-sdk build quay.io/dwojciec/squash-operator:v0.0.1 $ docker push quay.io/dwojciec/squash-operator:v0.0.1&lt;/span&gt; &lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Kubernetes deployment manifests are generated in &lt;b&gt;deploy/operator.yaml&lt;/b&gt;. The deployment image in this file needs to be modified from the placeholder REPLACE_IMAGE to the previous built image. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Edit &lt;b&gt;deploy/operator.yaml&lt;/b&gt; file and change :&lt;/span&gt;&lt;/p&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt; spec: containers: - name: squash-operator image: REPLACE_IMAGE ports: To&lt;/span&gt;&lt;/pre&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt;spec: containers: - name: squash-operator image: quay.io/dwojciec/squash-operator:v0.0.1 ports: &lt;/span&gt;&lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Finally, deploy the squash-operator.&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;$ kubectl create -f deploy/rbac.yaml $ kubectl create -f deploy/operator.yaml $ kubectl create -f deploy/sa.yaml&lt;/span&gt;&lt;/pre&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Thanks for reading this article. I hope you found interesting information. And if you want to deep dive I encourage you to go further and I&amp;#8217;m sharing some links below.&lt;/p&gt; &lt;p&gt;&lt;span style="font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;"&gt;Consult these references to go further:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://opensource.com/article/18/10/ansible-operators-kubernetes"&gt;&lt;span style="font-weight: 400;"&gt;An introduction to Ansible Operators in Kubernetes&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Smk9oQp7YMY"&gt;&lt;span style="font-weight: 400;"&gt;Memcached Ansible Operator Demo&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;&lt;a id="references"&gt;&lt;/a&gt;References&lt;/h2&gt; &lt;ol&gt; &lt;li&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://go.lightstep.com/global-microservices-trends-report-2018"&gt;Global Microservices Trends: a survey of Development ProfessionalsÂ April 2018&lt;/a&gt;Â &lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://www.oreilly.com/library/view/facts-and-fallacies/0321117425/"&gt;Facts and Fallacies of Software Engineering, &lt;/a&gt;&lt;a href="https://www.oreilly.com/library/view/facts-and-fallacies/0321117425/"&gt;Glass, R ,Â &lt;/a&gt;&lt;a href="https://www.oreilly.com/library/view/facts-and-fallacies/0321117425/"&gt;Addison-Wesley Professional, 2002, p 115&lt;/a&gt;&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://dx.doi.org/10.5455%2FAIM.2012.21.63-66"&gt;Which Factors Affect Software Projects Maintenance Cost More? &lt;/a&gt;&lt;a href="https://dx.doi.org/10.5455%2FAIM.2012.21.63-66"&gt;Dehaghani, S.M.H.,Â  Hajrahimi, N.&lt;/a&gt;&lt;a href="https://dx.doi.org/10.5455%2FAIM.2012.21.63-66"&gt;, Informatica Medica, 2013&lt;/a&gt;&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fmicroservices-debugging-openshift-kubernetes%2F&amp;#38;linkname=Solving%20the%20challenges%20of%20debugging%20microservices%20on%20a%20container%20platform" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fmicroservices-debugging-openshift-kubernetes%2F&amp;#38;linkname=Solving%20the%20challenges%20of%20debugging%20microservices%20on%20a%20container%20platform" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fmicroservices-debugging-openshift-kubernetes%2F&amp;#38;linkname=Solving%20the%20challenges%20of%20debugging%20microservices%20on%20a%20container%20platform" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fmicroservices-debugging-openshift-kubernetes%2F&amp;#38;linkname=Solving%20the%20challenges%20of%20debugging%20microservices%20on%20a%20container%20platform" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fmicroservices-debugging-openshift-kubernetes%2F&amp;#38;linkname=Solving%20the%20challenges%20of%20debugging%20microservices%20on%20a%20container%20platform" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fmicroservices-debugging-openshift-kubernetes%2F&amp;#38;linkname=Solving%20the%20challenges%20of%20debugging%20microservices%20on%20a%20container%20platform" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fmicroservices-debugging-openshift-kubernetes%2F&amp;#38;linkname=Solving%20the%20challenges%20of%20debugging%20microservices%20on%20a%20container%20platform" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fmicroservices-debugging-openshift-kubernetes%2F&amp;#38;linkname=Solving%20the%20challenges%20of%20debugging%20microservices%20on%20a%20container%20platform" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fmicroservices-debugging-openshift-kubernetes%2F&amp;#038;title=Solving%20the%20challenges%20of%20debugging%20microservices%20on%20a%20container%20platform" data-a2a-url="https://developers.redhat.com/blog/2018/11/27/microservices-debugging-openshift-kubernetes/" data-a2a-title="Solving the challenges of debugging microservices on a container platform"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/27/microservices-debugging-openshift-kubernetes/"&gt;Solving the challenges of debugging microservices on a container platform&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/WN2mw_EF06Q" height="1" width="1" alt=""/&gt;</content><summary>Microservices have become mainstream in the enterprise. This proliferation of microservices applications generates new problems, which requires a new approach to managing problems. A microservice is a small, independently deployable, and independently scalable software service that is designed to encapsulate a specific semantic function in the larger applicationl. This article explores several app...</summary><dc:creator>Didier Wojciechowski</dc:creator><dc:date>2018-11-27T13:00:13Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/27/microservices-debugging-openshift-kubernetes/</feedburner:origLink></entry></feed>
